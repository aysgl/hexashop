{"ast":null,"code":"/**!\r\n * @fileOverview Kickass library to create and place poppers near their reference elements.\r\n * @version 1.12.9\r\n * @license\r\n * Copyright (c) 2016 Federico Zivolo and contributors\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Popper = factory();\n})(this, function () {\n  'use strict';\n\n  var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  var timeoutDuration = 0;\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      timeoutDuration = 1;\n      break;\n    }\n  }\n  function microtaskDebounce(fn) {\n    var called = false;\n    return function () {\n      if (called) {\n        return;\n      }\n      called = true;\n      window.Promise.resolve().then(function () {\n        called = false;\n        fn();\n      });\n    };\n  }\n  function taskDebounce(fn) {\n    var scheduled = false;\n    return function () {\n      if (!scheduled) {\n        scheduled = true;\n        setTimeout(function () {\n          scheduled = false;\n          fn();\n        }, timeoutDuration);\n      }\n    };\n  }\n  var supportsMicroTasks = isBrowser && window.Promise;\n\n  /**\r\n  * Create a debounced version of a method, that's asynchronously deferred\r\n  * but called in the minimum time possible.\r\n  *\r\n  * @method\r\n  * @memberof Popper.Utils\r\n  * @argument {Function} fn\r\n  * @returns {Function}\r\n  */\n  var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n  /**\r\n   * Check if the given variable is a function\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Any} functionToCheck - variable to check\r\n   * @returns {Boolean} answer to: is a function?\r\n   */\n  function isFunction(functionToCheck) {\n    var getType = {};\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n  }\n\n  /**\r\n   * Get CSS computed property of the given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Eement} element\r\n   * @argument {String} property\r\n   */\n  function getStyleComputedProperty(element, property) {\n    if (element.nodeType !== 1) {\n      return [];\n    }\n    // NOTE: 1 DOM access here\n    var css = getComputedStyle(element, null);\n    return property ? css[property] : css;\n  }\n\n  /**\r\n   * Returns the parentNode or the host of the element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Element} parent\r\n   */\n  function getParentNode(element) {\n    if (element.nodeName === 'HTML') {\n      return element;\n    }\n    return element.parentNode || element.host;\n  }\n\n  /**\r\n   * Returns the scrolling parent of the given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Element} scroll parent\r\n   */\n  function getScrollParent(element) {\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    if (!element) {\n      return document.body;\n    }\n    switch (element.nodeName) {\n      case 'HTML':\n      case 'BODY':\n        return element.ownerDocument.body;\n      case '#document':\n        return element.body;\n    }\n\n    // Firefox want us to check `-x` and `-y` variations as well\n\n    var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n    if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n      return element;\n    }\n    return getScrollParent(getParentNode(element));\n  }\n\n  /**\r\n   * Returns the offset parent of the given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Element} offset parent\r\n   */\n  function getOffsetParent(element) {\n    // NOTE: 1 DOM access here\n    var offsetParent = element && element.offsetParent;\n    var nodeName = offsetParent && offsetParent.nodeName;\n    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n      if (element) {\n        return element.ownerDocument.documentElement;\n      }\n      return document.documentElement;\n    }\n\n    // .offsetParent will return the closest TD or TABLE in case\n    // no offsetParent is present, I hate this job...\n    if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n      return getOffsetParent(offsetParent);\n    }\n    return offsetParent;\n  }\n  function isOffsetContainer(element) {\n    var nodeName = element.nodeName;\n    if (nodeName === 'BODY') {\n      return false;\n    }\n    return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n  }\n\n  /**\r\n   * Finds the root node (document, shadowDOM root) of the given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} node\r\n   * @returns {Element} root node\r\n   */\n  function getRoot(node) {\n    if (node.parentNode !== null) {\n      return getRoot(node.parentNode);\n    }\n    return node;\n  }\n\n  /**\r\n   * Finds the offset parent common to the two provided nodes\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element1\r\n   * @argument {Element} element2\r\n   * @returns {Element} common offset parent\r\n   */\n  function findCommonOffsetParent(element1, element2) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n      return document.documentElement;\n    }\n\n    // Here we make sure to give as \"start\" the element that comes first in the DOM\n    var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n    var start = order ? element1 : element2;\n    var end = order ? element2 : element1;\n\n    // Get common ancestor container\n    var range = document.createRange();\n    range.setStart(start, 0);\n    range.setEnd(end, 0);\n    var commonAncestorContainer = range.commonAncestorContainer;\n\n    // Both nodes are inside #document\n\n    if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n      if (isOffsetContainer(commonAncestorContainer)) {\n        return commonAncestorContainer;\n      }\n      return getOffsetParent(commonAncestorContainer);\n    }\n\n    // one of the nodes is inside shadowDOM, find which one\n    var element1root = getRoot(element1);\n    if (element1root.host) {\n      return findCommonOffsetParent(element1root.host, element2);\n    } else {\n      return findCommonOffsetParent(element1, getRoot(element2).host);\n    }\n  }\n\n  /**\r\n   * Gets the scroll value of the given element in the given side (top and left)\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @argument {String} side `top` or `left`\r\n   * @returns {number} amount of scrolled pixels\r\n   */\n  function getScroll(element) {\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n    var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n    var nodeName = element.nodeName;\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      var html = element.ownerDocument.documentElement;\n      var scrollingElement = element.ownerDocument.scrollingElement || html;\n      return scrollingElement[upperSide];\n    }\n    return element[upperSide];\n  }\n\n  /*\r\n   * Sum or subtract the element scroll values (left and top) from a given rect object\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Object} rect - Rect object you want to change\r\n   * @param {HTMLElement} element - The element from the function reads the scroll values\r\n   * @param {Boolean} subtract - set to true if you want to subtract the scroll values\r\n   * @return {Object} rect - The modifier rect object\r\n   */\n  function includeScroll(rect, element) {\n    var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var scrollTop = getScroll(element, 'top');\n    var scrollLeft = getScroll(element, 'left');\n    var modifier = subtract ? -1 : 1;\n    rect.top += scrollTop * modifier;\n    rect.bottom += scrollTop * modifier;\n    rect.left += scrollLeft * modifier;\n    rect.right += scrollLeft * modifier;\n    return rect;\n  }\n\n  /*\r\n   * Helper to detect borders of a given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {CSSStyleDeclaration} styles\r\n   * Result of `getStyleComputedProperty` on the given element\r\n   * @param {String} axis - `x` or `y`\r\n   * @return {number} borders - The borders size of the given axis\r\n   */\n\n  function getBordersSize(styles, axis) {\n    var sideA = axis === 'x' ? 'Left' : 'Top';\n    var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n    return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n  }\n\n  /**\r\n   * Tells if you are running Internet Explorer 10\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @returns {Boolean} isIE10\r\n   */\n  var isIE10 = undefined;\n  var isIE10$1 = function () {\n    if (isIE10 === undefined) {\n      isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n    }\n    return isIE10;\n  };\n  function getSize(axis, body, html, computedStyle) {\n    return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n  }\n  function getWindowSizes() {\n    var body = document.body;\n    var html = document.documentElement;\n    var computedStyle = isIE10$1() && getComputedStyle(html);\n    return {\n      height: getSize('Height', body, html, computedStyle),\n      width: getSize('Width', body, html, computedStyle)\n    };\n  }\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  var defineProperty = function (obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  };\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n\n  /**\r\n   * Given element offsets, generate an output similar to getBoundingClientRect\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Object} offsets\r\n   * @returns {Object} ClientRect like output\r\n   */\n  function getClientRect(offsets) {\n    return _extends({}, offsets, {\n      right: offsets.left + offsets.width,\n      bottom: offsets.top + offsets.height\n    });\n  }\n\n  /**\r\n   * Get bounding client rect of given element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {HTMLElement} element\r\n   * @return {Object} client rect\r\n   */\n  function getBoundingClientRect(element) {\n    var rect = {};\n\n    // IE10 10 FIX: Please, don't ask, the element isn't\n    // considered in DOM in some circumstances...\n    // This isn't reproducible in IE10 compatibility mode of IE11\n    if (isIE10$1()) {\n      try {\n        rect = element.getBoundingClientRect();\n        var scrollTop = getScroll(element, 'top');\n        var scrollLeft = getScroll(element, 'left');\n        rect.top += scrollTop;\n        rect.left += scrollLeft;\n        rect.bottom += scrollTop;\n        rect.right += scrollLeft;\n      } catch (err) {}\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n    var result = {\n      left: rect.left,\n      top: rect.top,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n\n    // subtract scrollbar size from sizes\n    var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n    var width = sizes.width || element.clientWidth || result.right - result.left;\n    var height = sizes.height || element.clientHeight || result.bottom - result.top;\n    var horizScrollbar = element.offsetWidth - width;\n    var vertScrollbar = element.offsetHeight - height;\n\n    // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n    // we make this check conditional for performance reasons\n    if (horizScrollbar || vertScrollbar) {\n      var styles = getStyleComputedProperty(element);\n      horizScrollbar -= getBordersSize(styles, 'x');\n      vertScrollbar -= getBordersSize(styles, 'y');\n      result.width -= horizScrollbar;\n      result.height -= vertScrollbar;\n    }\n    return getClientRect(result);\n  }\n  function getOffsetRectRelativeToArbitraryNode(children, parent) {\n    var isIE10 = isIE10$1();\n    var isHTML = parent.nodeName === 'HTML';\n    var childrenRect = getBoundingClientRect(children);\n    var parentRect = getBoundingClientRect(parent);\n    var scrollParent = getScrollParent(children);\n    var styles = getStyleComputedProperty(parent);\n    var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n    var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n    var offsets = getClientRect({\n      top: childrenRect.top - parentRect.top - borderTopWidth,\n      left: childrenRect.left - parentRect.left - borderLeftWidth,\n      width: childrenRect.width,\n      height: childrenRect.height\n    });\n    offsets.marginTop = 0;\n    offsets.marginLeft = 0;\n\n    // Subtract margins of documentElement in case it's being used as parent\n    // we do this only on HTML because it's the only element that behaves\n    // differently when margins are applied to it. The margins are included in\n    // the box of the documentElement, in the other cases not.\n    if (!isIE10 && isHTML) {\n      var marginTop = parseFloat(styles.marginTop, 10);\n      var marginLeft = parseFloat(styles.marginLeft, 10);\n      offsets.top -= borderTopWidth - marginTop;\n      offsets.bottom -= borderTopWidth - marginTop;\n      offsets.left -= borderLeftWidth - marginLeft;\n      offsets.right -= borderLeftWidth - marginLeft;\n\n      // Attach marginTop and marginLeft because in some circumstances we may need them\n      offsets.marginTop = marginTop;\n      offsets.marginLeft = marginLeft;\n    }\n    if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n      offsets = includeScroll(offsets, parent);\n    }\n    return offsets;\n  }\n  function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n    var html = element.ownerDocument.documentElement;\n    var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n    var width = Math.max(html.clientWidth, window.innerWidth || 0);\n    var height = Math.max(html.clientHeight, window.innerHeight || 0);\n    var scrollTop = getScroll(html);\n    var scrollLeft = getScroll(html, 'left');\n    var offset = {\n      top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n      left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n      width: width,\n      height: height\n    };\n    return getClientRect(offset);\n  }\n\n  /**\r\n   * Check if the given element is fixed or is inside a fixed parent\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @argument {Element} customContainer\r\n   * @returns {Boolean} answer to \"isFixed?\"\r\n   */\n  function isFixed(element) {\n    var nodeName = element.nodeName;\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n      return false;\n    }\n    if (getStyleComputedProperty(element, 'position') === 'fixed') {\n      return true;\n    }\n    return isFixed(getParentNode(element));\n  }\n\n  /**\r\n   * Computed the boundaries limits and return them\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {HTMLElement} popper\r\n   * @param {HTMLElement} reference\r\n   * @param {number} padding\r\n   * @param {HTMLElement} boundariesElement - Element used to define the boundaries\r\n   * @returns {Object} Coordinates of the boundaries\r\n   */\n  function getBoundaries(popper, reference, padding, boundariesElement) {\n    // NOTE: 1 DOM access here\n    var boundaries = {\n      top: 0,\n      left: 0\n    };\n    var offsetParent = findCommonOffsetParent(popper, reference);\n\n    // Handle viewport case\n    if (boundariesElement === 'viewport') {\n      boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n    } else {\n      // Handle other cases based on DOM element used as boundaries\n      var boundariesNode = void 0;\n      if (boundariesElement === 'scrollParent') {\n        boundariesNode = getScrollParent(getParentNode(reference));\n        if (boundariesNode.nodeName === 'BODY') {\n          boundariesNode = popper.ownerDocument.documentElement;\n        }\n      } else if (boundariesElement === 'window') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      } else {\n        boundariesNode = boundariesElement;\n      }\n      var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);\n\n      // In case of HTML, we need a different computation\n      if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n        var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n        boundaries.top += offsets.top - offsets.marginTop;\n        boundaries.bottom = height + offsets.top;\n        boundaries.left += offsets.left - offsets.marginLeft;\n        boundaries.right = width + offsets.left;\n      } else {\n        // for all the other DOM elements, this one is good\n        boundaries = offsets;\n      }\n    }\n\n    // Add paddings\n    boundaries.left += padding;\n    boundaries.top += padding;\n    boundaries.right -= padding;\n    boundaries.bottom -= padding;\n    return boundaries;\n  }\n  function getArea(_ref) {\n    var width = _ref.width,\n      height = _ref.height;\n    return width * height;\n  }\n\n  /**\r\n   * Utility used to transform the `auto` placement to the placement with more\r\n   * available space.\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n    var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    if (placement.indexOf('auto') === -1) {\n      return placement;\n    }\n    var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n    var rects = {\n      top: {\n        width: boundaries.width,\n        height: refRect.top - boundaries.top\n      },\n      right: {\n        width: boundaries.right - refRect.right,\n        height: boundaries.height\n      },\n      bottom: {\n        width: boundaries.width,\n        height: boundaries.bottom - refRect.bottom\n      },\n      left: {\n        width: refRect.left - boundaries.left,\n        height: boundaries.height\n      }\n    };\n    var sortedAreas = Object.keys(rects).map(function (key) {\n      return _extends({\n        key: key\n      }, rects[key], {\n        area: getArea(rects[key])\n      });\n    }).sort(function (a, b) {\n      return b.area - a.area;\n    });\n    var filteredAreas = sortedAreas.filter(function (_ref2) {\n      var width = _ref2.width,\n        height = _ref2.height;\n      return width >= popper.clientWidth && height >= popper.clientHeight;\n    });\n    var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n    var variation = placement.split('-')[1];\n    return computedPlacement + (variation ? '-' + variation : '');\n  }\n\n  /**\r\n   * Get offsets to the reference element\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Object} state\r\n   * @param {Element} popper - the popper element\r\n   * @param {Element} reference - the reference element (the popper will be relative to this)\r\n   * @returns {Object} An object containing the offsets which will be applied to the popper\r\n   */\n  function getReferenceOffsets(state, popper, reference) {\n    var commonOffsetParent = findCommonOffsetParent(popper, reference);\n    return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n  }\n\n  /**\r\n   * Get the outer sizes of the given element (offset size + margins)\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element\r\n   * @returns {Object} object containing width and height properties\r\n   */\n  function getOuterSizes(element) {\n    var styles = getComputedStyle(element);\n    var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n    var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n    var result = {\n      width: element.offsetWidth + y,\n      height: element.offsetHeight + x\n    };\n    return result;\n  }\n\n  /**\r\n   * Get the opposite placement of the given one\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {String} placement\r\n   * @returns {String} flipped placement\r\n   */\n  function getOppositePlacement(placement) {\n    var hash = {\n      left: 'right',\n      right: 'left',\n      bottom: 'top',\n      top: 'bottom'\n    };\n    return placement.replace(/left|right|bottom|top/g, function (matched) {\n      return hash[matched];\n    });\n  }\n\n  /**\r\n   * Get offsets to the popper\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Object} position - CSS position the Popper will get applied\r\n   * @param {HTMLElement} popper - the popper element\r\n   * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\r\n   * @param {String} placement - one of the valid placement options\r\n   * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\r\n   */\n  function getPopperOffsets(popper, referenceOffsets, placement) {\n    placement = placement.split('-')[0];\n\n    // Get popper node sizes\n    var popperRect = getOuterSizes(popper);\n\n    // Add position, width and height to our offsets object\n    var popperOffsets = {\n      width: popperRect.width,\n      height: popperRect.height\n    };\n\n    // depending by the popper placement we have to compute its offsets slightly differently\n    var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n    var mainSide = isHoriz ? 'top' : 'left';\n    var secondarySide = isHoriz ? 'left' : 'top';\n    var measurement = isHoriz ? 'height' : 'width';\n    var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n    if (placement === secondarySide) {\n      popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n    } else {\n      popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n    }\n    return popperOffsets;\n  }\n\n  /**\r\n   * Mimics the `find` method of Array\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Array} arr\r\n   * @argument prop\r\n   * @argument value\r\n   * @returns index or -1\r\n   */\n  function find(arr, check) {\n    // use native find if supported\n    if (Array.prototype.find) {\n      return arr.find(check);\n    }\n\n    // use `filter` to obtain the same behavior of `find`\n    return arr.filter(check)[0];\n  }\n\n  /**\r\n   * Return the index of the matching object\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Array} arr\r\n   * @argument prop\r\n   * @argument value\r\n   * @returns index or -1\r\n   */\n  function findIndex(arr, prop, value) {\n    // use native findIndex if supported\n    if (Array.prototype.findIndex) {\n      return arr.findIndex(function (cur) {\n        return cur[prop] === value;\n      });\n    }\n\n    // use `find` + `indexOf` if `findIndex` isn't supported\n    var match = find(arr, function (obj) {\n      return obj[prop] === value;\n    });\n    return arr.indexOf(match);\n  }\n\n  /**\r\n   * Loop trough the list of modifiers and run them in order,\r\n   * each of them will then edit the data object.\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {dataObject} data\r\n   * @param {Array} modifiers\r\n   * @param {String} ends - Optional modifier name used as stopper\r\n   * @returns {dataObject}\r\n   */\n  function runModifiers(modifiers, data, ends) {\n    var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n    modifiersToRun.forEach(function (modifier) {\n      if (modifier['function']) {\n        // eslint-disable-line dot-notation\n        console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n      }\n      var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n      if (modifier.enabled && isFunction(fn)) {\n        // Add properties to offsets to make them a complete clientRect object\n        // we do this before each modifier to make sure the previous one doesn't\n        // mess with these values\n        data.offsets.popper = getClientRect(data.offsets.popper);\n        data.offsets.reference = getClientRect(data.offsets.reference);\n        data = fn(data, modifier);\n      }\n    });\n    return data;\n  }\n\n  /**\r\n   * Updates the position of the popper, computing the new offsets and applying\r\n   * the new style.<br />\r\n   * Prefer `scheduleUpdate` over `update` because of performance reasons.\r\n   * @method\r\n   * @memberof Popper\r\n   */\n  function update() {\n    // if popper is destroyed, don't perform any further update\n    if (this.state.isDestroyed) {\n      return;\n    }\n    var data = {\n      instance: this,\n      styles: {},\n      arrowStyles: {},\n      attributes: {},\n      flipped: false,\n      offsets: {}\n    };\n\n    // compute reference element offsets\n    data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);\n\n    // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n    data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n    // store the computed placement inside `originalPlacement`\n    data.originalPlacement = data.placement;\n\n    // compute the popper offsets\n    data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n    data.offsets.popper.position = 'absolute';\n\n    // run the modifiers\n    data = runModifiers(this.modifiers, data);\n\n    // the first `update` will call `onCreate` callback\n    // the other ones will call `onUpdate` callback\n    if (!this.state.isCreated) {\n      this.state.isCreated = true;\n      this.options.onCreate(data);\n    } else {\n      this.options.onUpdate(data);\n    }\n  }\n\n  /**\r\n   * Helper used to know if the given modifier is enabled.\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @returns {Boolean}\r\n   */\n  function isModifierEnabled(modifiers, modifierName) {\n    return modifiers.some(function (_ref) {\n      var name = _ref.name,\n        enabled = _ref.enabled;\n      return enabled && name === modifierName;\n    });\n  }\n\n  /**\r\n   * Get the prefixed supported property name\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {String} property (camelCase)\r\n   * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\r\n   */\n  function getSupportedPropertyName(property) {\n    var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n    var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n    for (var i = 0; i < prefixes.length - 1; i++) {\n      var prefix = prefixes[i];\n      var toCheck = prefix ? '' + prefix + upperProp : property;\n      if (typeof document.body.style[toCheck] !== 'undefined') {\n        return toCheck;\n      }\n    }\n    return null;\n  }\n\n  /**\r\n   * Destroy the popper\r\n   * @method\r\n   * @memberof Popper\r\n   */\n  function destroy() {\n    this.state.isDestroyed = true;\n\n    // touch DOM only if `applyStyle` modifier is enabled\n    if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n      this.popper.removeAttribute('x-placement');\n      this.popper.style.left = '';\n      this.popper.style.position = '';\n      this.popper.style.top = '';\n      this.popper.style[getSupportedPropertyName('transform')] = '';\n    }\n    this.disableEventListeners();\n\n    // remove the popper if user explicity asked for the deletion on destroy\n    // do not use `remove` because IE11 doesn't support it\n    if (this.options.removeOnDestroy) {\n      this.popper.parentNode.removeChild(this.popper);\n    }\n    return this;\n  }\n\n  /**\r\n   * Get the window associated with the element\r\n   * @argument {Element} element\r\n   * @returns {Window}\r\n   */\n  function getWindow(element) {\n    var ownerDocument = element.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView : window;\n  }\n  function attachToScrollParents(scrollParent, event, callback, scrollParents) {\n    var isBody = scrollParent.nodeName === 'BODY';\n    var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n    target.addEventListener(event, callback, {\n      passive: true\n    });\n    if (!isBody) {\n      attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n    }\n    scrollParents.push(target);\n  }\n\n  /**\r\n   * Setup needed event listeners used to update the popper position\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @private\r\n   */\n  function setupEventListeners(reference, options, state, updateBound) {\n    // Resize event listener on window\n    state.updateBound = updateBound;\n    getWindow(reference).addEventListener('resize', state.updateBound, {\n      passive: true\n    });\n\n    // Scroll event listener on scroll parents\n    var scrollElement = getScrollParent(reference);\n    attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n    state.scrollElement = scrollElement;\n    state.eventsEnabled = true;\n    return state;\n  }\n\n  /**\r\n   * It will add resize/scroll events and start recalculating\r\n   * position of the popper element when they are triggered.\r\n   * @method\r\n   * @memberof Popper\r\n   */\n  function enableEventListeners() {\n    if (!this.state.eventsEnabled) {\n      this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n    }\n  }\n\n  /**\r\n   * Remove event listeners used to update the popper position\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @private\r\n   */\n  function removeEventListeners(reference, state) {\n    // Remove resize event listener on window\n    getWindow(reference).removeEventListener('resize', state.updateBound);\n\n    // Remove scroll event listener on scroll parents\n    state.scrollParents.forEach(function (target) {\n      target.removeEventListener('scroll', state.updateBound);\n    });\n\n    // Reset state\n    state.updateBound = null;\n    state.scrollParents = [];\n    state.scrollElement = null;\n    state.eventsEnabled = false;\n    return state;\n  }\n\n  /**\r\n   * It will remove resize/scroll events and won't recalculate popper position\r\n   * when they are triggered. It also won't trigger onUpdate callback anymore,\r\n   * unless you call `update` method manually.\r\n   * @method\r\n   * @memberof Popper\r\n   */\n  function disableEventListeners() {\n    if (this.state.eventsEnabled) {\n      cancelAnimationFrame(this.scheduleUpdate);\n      this.state = removeEventListeners(this.reference, this.state);\n    }\n  }\n\n  /**\r\n   * Tells if a given input is a number\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {*} input to check\r\n   * @return {Boolean}\r\n   */\n  function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  /**\r\n   * Set the style to the given popper\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element - Element to apply the style to\r\n   * @argument {Object} styles\r\n   * Object with a list of properties and values which will be applied to the element\r\n   */\n  function setStyles(element, styles) {\n    Object.keys(styles).forEach(function (prop) {\n      var unit = '';\n      // add unit if the value is numeric and is one of the following\n      if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n        unit = 'px';\n      }\n      element.style[prop] = styles[prop] + unit;\n    });\n  }\n\n  /**\r\n   * Set the attributes to the given popper\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {Element} element - Element to apply the attributes to\r\n   * @argument {Object} styles\r\n   * Object with a list of properties and values which will be applied to the element\r\n   */\n  function setAttributes(element, attributes) {\n    Object.keys(attributes).forEach(function (prop) {\n      var value = attributes[prop];\n      if (value !== false) {\n        element.setAttribute(prop, attributes[prop]);\n      } else {\n        element.removeAttribute(prop);\n      }\n    });\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} data.styles - List of style properties - values to apply to popper element\r\n   * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The same data object\r\n   */\n  function applyStyle(data) {\n    // any property present in `data.styles` will be applied to the popper,\n    // in this way we can make the 3rd party modifiers add custom styles to it\n    // Be aware, modifiers could override the properties defined in the previous\n    // lines of this modifier!\n    setStyles(data.instance.popper, data.styles);\n\n    // any property present in `data.attributes` will be applied to the popper,\n    // they will be set as HTML attributes of the element\n    setAttributes(data.instance.popper, data.attributes);\n\n    // if arrowElement is defined and arrowStyles has some properties\n    if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n      setStyles(data.arrowElement, data.arrowStyles);\n    }\n    return data;\n  }\n\n  /**\r\n   * Set the x-placement attribute before everything else because it could be used\r\n   * to add margins to the popper margins needs to be calculated to get the\r\n   * correct popper offsets.\r\n   * @method\r\n   * @memberof Popper.modifiers\r\n   * @param {HTMLElement} reference - The reference element used to position the popper\r\n   * @param {HTMLElement} popper - The HTML element used as popper.\r\n   * @param {Object} options - Popper.js options\r\n   */\n  function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n    // compute reference element offsets\n    var referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n    // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n    var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n    popper.setAttribute('x-placement', placement);\n\n    // Apply `position` to popper before anything else because\n    // without the position applied we can't guarantee correct computations\n    setStyles(popper, {\n      position: 'absolute'\n    });\n    return options;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function computeStyle(data, options) {\n    var x = options.x,\n      y = options.y;\n    var popper = data.offsets.popper;\n\n    // Remove this legacy support in Popper.js v2\n\n    var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'applyStyle';\n    }).gpuAcceleration;\n    if (legacyGpuAccelerationOption !== undefined) {\n      console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n    }\n    var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n    var offsetParent = getOffsetParent(data.instance.popper);\n    var offsetParentRect = getBoundingClientRect(offsetParent);\n\n    // Styles\n    var styles = {\n      position: popper.position\n    };\n\n    // floor sides to avoid blurry text\n    var offsets = {\n      left: Math.floor(popper.left),\n      top: Math.floor(popper.top),\n      bottom: Math.floor(popper.bottom),\n      right: Math.floor(popper.right)\n    };\n    var sideA = x === 'bottom' ? 'top' : 'bottom';\n    var sideB = y === 'right' ? 'left' : 'right';\n\n    // if gpuAcceleration is set to `true` and transform is supported,\n    //  we use `translate3d` to apply the position to the popper we\n    // automatically use the supported prefixed version if needed\n    var prefixedProperty = getSupportedPropertyName('transform');\n\n    // now, let's make a step back and look at this code closely (wtf?)\n    // If the content of the popper grows once it's been positioned, it\n    // may happen that the popper gets misplaced because of the new content\n    // overflowing its reference element\n    // To avoid this problem, we provide two options (x and y), which allow\n    // the consumer to define the offset origin.\n    // If we position a popper on top of a reference element, we can set\n    // `x` to `top` to make the popper grow towards its top instead of\n    // its bottom.\n    var left = void 0,\n      top = void 0;\n    if (sideA === 'bottom') {\n      top = -offsetParentRect.height + offsets.bottom;\n    } else {\n      top = offsets.top;\n    }\n    if (sideB === 'right') {\n      left = -offsetParentRect.width + offsets.right;\n    } else {\n      left = offsets.left;\n    }\n    if (gpuAcceleration && prefixedProperty) {\n      styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n      styles[sideA] = 0;\n      styles[sideB] = 0;\n      styles.willChange = 'transform';\n    } else {\n      // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n      var invertTop = sideA === 'bottom' ? -1 : 1;\n      var invertLeft = sideB === 'right' ? -1 : 1;\n      styles[sideA] = top * invertTop;\n      styles[sideB] = left * invertLeft;\n      styles.willChange = sideA + ', ' + sideB;\n    }\n\n    // Attributes\n    var attributes = {\n      'x-placement': data.placement\n    };\n\n    // Update `data` attributes, styles and arrowStyles\n    data.attributes = _extends({}, attributes, data.attributes);\n    data.styles = _extends({}, styles, data.styles);\n    data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n    return data;\n  }\n\n  /**\r\n   * Helper used to know if the given modifier depends from another one.<br />\r\n   * It checks if the needed modifier is listed and enabled.\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @param {Array} modifiers - list of modifiers\r\n   * @param {String} requestingName - name of requesting modifier\r\n   * @param {String} requestedName - name of requested modifier\r\n   * @returns {Boolean}\r\n   */\n  function isModifierRequired(modifiers, requestingName, requestedName) {\n    var requesting = find(modifiers, function (_ref) {\n      var name = _ref.name;\n      return name === requestingName;\n    });\n    var isRequired = !!requesting && modifiers.some(function (modifier) {\n      return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n    });\n    if (!isRequired) {\n      var _requesting = '`' + requestingName + '`';\n      var requested = '`' + requestedName + '`';\n      console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n    }\n    return isRequired;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function arrow(data, options) {\n    var _data$offsets$arrow;\n\n    // arrow depends on keepTogether in order to work\n    if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n      return data;\n    }\n    var arrowElement = options.element;\n\n    // if arrowElement is a string, suppose it's a CSS selector\n    if (typeof arrowElement === 'string') {\n      arrowElement = data.instance.popper.querySelector(arrowElement);\n\n      // if arrowElement is not found, don't run the modifier\n      if (!arrowElement) {\n        return data;\n      }\n    } else {\n      // if the arrowElement isn't a query selector we must check that the\n      // provided DOM node is child of its popper node\n      if (!data.instance.popper.contains(arrowElement)) {\n        console.warn('WARNING: `arrow.element` must be child of its popper element!');\n        return data;\n      }\n    }\n    var placement = data.placement.split('-')[0];\n    var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n    var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n    var len = isVertical ? 'height' : 'width';\n    var sideCapitalized = isVertical ? 'Top' : 'Left';\n    var side = sideCapitalized.toLowerCase();\n    var altSide = isVertical ? 'left' : 'top';\n    var opSide = isVertical ? 'bottom' : 'right';\n    var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n    //\n    // extends keepTogether behavior making sure the popper and its\n    // reference have enough pixels in conjuction\n    //\n\n    // top/left side\n    if (reference[opSide] - arrowElementSize < popper[side]) {\n      data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n    }\n    // bottom/right side\n    if (reference[side] + arrowElementSize > popper[opSide]) {\n      data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n    }\n    data.offsets.popper = getClientRect(data.offsets.popper);\n\n    // compute center of the popper\n    var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n    // Compute the sideValue using the updated popper offsets\n    // take popper margin in account because we don't have this info available\n    var css = getStyleComputedProperty(data.instance.popper);\n    var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n    var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n    var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n    // prevent arrowElement from being placed not contiguously to its popper\n    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n    data.arrowElement = arrowElement;\n    data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n    return data;\n  }\n\n  /**\r\n   * Get the opposite placement variation of the given one\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {String} placement variation\r\n   * @returns {String} flipped placement variation\r\n   */\n  function getOppositeVariation(variation) {\n    if (variation === 'end') {\n      return 'start';\n    } else if (variation === 'start') {\n      return 'end';\n    }\n    return variation;\n  }\n\n  /**\r\n   * List of accepted placements to use as values of the `placement` option.<br />\r\n   * Valid placements are:\r\n   * - `auto`\r\n   * - `top`\r\n   * - `right`\r\n   * - `bottom`\r\n   * - `left`\r\n   *\r\n   * Each placement can have a variation from this list:\r\n   * - `-start`\r\n   * - `-end`\r\n   *\r\n   * Variations are interpreted easily if you think of them as the left to right\r\n   * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\r\n   * is right.<br />\r\n   * Vertically (`left` and `right`), `start` is top and `end` is bottom.\r\n   *\r\n   * Some valid examples are:\r\n   * - `top-end` (on top of reference, right aligned)\r\n   * - `right-start` (on right of reference, top aligned)\r\n   * - `bottom` (on bottom, centered)\r\n   * - `auto-right` (on the side with more space available, alignment depends by placement)\r\n   *\r\n   * @static\r\n   * @type {Array}\r\n   * @enum {String}\r\n   * @readonly\r\n   * @method placements\r\n   * @memberof Popper\r\n   */\n  var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n  // Get rid of `auto` `auto-start` and `auto-end`\n  var validPlacements = placements.slice(3);\n\n  /**\r\n   * Given an initial placement, returns all the subsequent placements\r\n   * clockwise (or counter-clockwise).\r\n   *\r\n   * @method\r\n   * @memberof Popper.Utils\r\n   * @argument {String} placement - A valid placement (it accepts variations)\r\n   * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\r\n   * @returns {Array} placements including their variations\r\n   */\n  function clockwise(placement) {\n    var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var index = validPlacements.indexOf(placement);\n    var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n    return counter ? arr.reverse() : arr;\n  }\n  var BEHAVIORS = {\n    FLIP: 'flip',\n    CLOCKWISE: 'clockwise',\n    COUNTERCLOCKWISE: 'counterclockwise'\n  };\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function flip(data, options) {\n    // if `inner` modifier is enabled, we can't use the `flip` modifier\n    if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n      return data;\n    }\n    if (data.flipped && data.placement === data.originalPlacement) {\n      // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n      return data;\n    }\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);\n    var placement = data.placement.split('-')[0];\n    var placementOpposite = getOppositePlacement(placement);\n    var variation = data.placement.split('-')[1] || '';\n    var flipOrder = [];\n    switch (options.behavior) {\n      case BEHAVIORS.FLIP:\n        flipOrder = [placement, placementOpposite];\n        break;\n      case BEHAVIORS.CLOCKWISE:\n        flipOrder = clockwise(placement);\n        break;\n      case BEHAVIORS.COUNTERCLOCKWISE:\n        flipOrder = clockwise(placement, true);\n        break;\n      default:\n        flipOrder = options.behavior;\n    }\n    flipOrder.forEach(function (step, index) {\n      if (placement !== step || flipOrder.length === index + 1) {\n        return data;\n      }\n      placement = data.placement.split('-')[0];\n      placementOpposite = getOppositePlacement(placement);\n      var popperOffsets = data.offsets.popper;\n      var refOffsets = data.offsets.reference;\n\n      // using floor because the reference offsets may contain decimals we are not going to consider here\n      var floor = Math.floor;\n      var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n      var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n      var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n      var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n      var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n      var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n      // flip the variation if required\n      var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n      var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n      if (overlapsRef || overflowsBoundaries || flippedVariation) {\n        // this boolean to detect any flip loop\n        data.flipped = true;\n        if (overlapsRef || overflowsBoundaries) {\n          placement = flipOrder[index + 1];\n        }\n        if (flippedVariation) {\n          variation = getOppositeVariation(variation);\n        }\n        data.placement = placement + (variation ? '-' + variation : '');\n\n        // this object contains `position`, we want to preserve it along with\n        // any additional property we may add in the future\n        data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n        data = runModifiers(data.instance.modifiers, data, 'flip');\n      }\n    });\n    return data;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function keepTogether(data) {\n    var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n    var placement = data.placement.split('-')[0];\n    var floor = Math.floor;\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var side = isVertical ? 'right' : 'bottom';\n    var opSide = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n    if (popper[side] < floor(reference[opSide])) {\n      data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n    }\n    if (popper[opSide] > floor(reference[side])) {\n      data.offsets.popper[opSide] = floor(reference[side]);\n    }\n    return data;\n  }\n\n  /**\r\n   * Converts a string containing value + unit into a px value number\r\n   * @function\r\n   * @memberof {modifiers~offset}\r\n   * @private\r\n   * @argument {String} str - Value + unit string\r\n   * @argument {String} measurement - `height` or `width`\r\n   * @argument {Object} popperOffsets\r\n   * @argument {Object} referenceOffsets\r\n   * @returns {Number|String}\r\n   * Value in pixels, or original string if no values were extracted\r\n   */\n  function toValue(str, measurement, popperOffsets, referenceOffsets) {\n    // separate value from unit\n    var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n    var value = +split[1];\n    var unit = split[2];\n\n    // If it's not a number it's an operator, I guess\n    if (!value) {\n      return str;\n    }\n    if (unit.indexOf('%') === 0) {\n      var element = void 0;\n      switch (unit) {\n        case '%p':\n          element = popperOffsets;\n          break;\n        case '%':\n        case '%r':\n        default:\n          element = referenceOffsets;\n      }\n      var rect = getClientRect(element);\n      return rect[measurement] / 100 * value;\n    } else if (unit === 'vh' || unit === 'vw') {\n      // if is a vh or vw, we calculate the size based on the viewport\n      var size = void 0;\n      if (unit === 'vh') {\n        size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n      } else {\n        size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n      }\n      return size / 100 * value;\n    } else {\n      // if is an explicit pixel unit, we get rid of the unit and keep the value\n      // if is an implicit unit, it's px, and we return just the value\n      return value;\n    }\n  }\n\n  /**\r\n   * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\r\n   * @function\r\n   * @memberof {modifiers~offset}\r\n   * @private\r\n   * @argument {String} offset\r\n   * @argument {Object} popperOffsets\r\n   * @argument {Object} referenceOffsets\r\n   * @argument {String} basePlacement\r\n   * @returns {Array} a two cells array with x and y offsets in numbers\r\n   */\n  function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n    var offsets = [0, 0];\n\n    // Use height if placement is left or right and index is 0 otherwise use width\n    // in this way the first offset will use an axis and the second one\n    // will use the other one\n    var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n    // Split the offset string to obtain a list of values and operands\n    // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n    var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n      return frag.trim();\n    });\n\n    // Detect if the offset string contains a pair of values or a single one\n    // they could be separated by comma or space\n    var divider = fragments.indexOf(find(fragments, function (frag) {\n      return frag.search(/,|\\s/) !== -1;\n    }));\n    if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n      console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n    }\n\n    // If divider is found, we divide the list of values and operands to divide\n    // them by ofset X and Y.\n    var splitRegex = /\\s*,\\s*|\\s+/;\n    var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n    // Convert the values with units to absolute pixels to allow our computations\n    ops = ops.map(function (op, index) {\n      // Most of the units rely on the orientation of the popper\n      var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n      var mergeWithPrevious = false;\n      return op\n      // This aggregates any `+` or `-` sign that aren't considered operators\n      // e.g.: 10 + +5 => [10, +, +5]\n      .reduce(function (a, b) {\n        if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n          a[a.length - 1] = b;\n          mergeWithPrevious = true;\n          return a;\n        } else if (mergeWithPrevious) {\n          a[a.length - 1] += b;\n          mergeWithPrevious = false;\n          return a;\n        } else {\n          return a.concat(b);\n        }\n      }, [])\n      // Here we convert the string values into number values (in px)\n      .map(function (str) {\n        return toValue(str, measurement, popperOffsets, referenceOffsets);\n      });\n    });\n\n    // Loop trough the offsets arrays and execute the operations\n    ops.forEach(function (op, index) {\n      op.forEach(function (frag, index2) {\n        if (isNumeric(frag)) {\n          offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n        }\n      });\n    });\n    return offsets;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @argument {Number|String} options.offset=0\r\n   * The offset value as described in the modifier description\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function offset(data, _ref) {\n    var offset = _ref.offset;\n    var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n    var basePlacement = placement.split('-')[0];\n    var offsets = void 0;\n    if (isNumeric(+offset)) {\n      offsets = [+offset, 0];\n    } else {\n      offsets = parseOffset(offset, popper, reference, basePlacement);\n    }\n    if (basePlacement === 'left') {\n      popper.top += offsets[0];\n      popper.left -= offsets[1];\n    } else if (basePlacement === 'right') {\n      popper.top += offsets[0];\n      popper.left += offsets[1];\n    } else if (basePlacement === 'top') {\n      popper.left += offsets[0];\n      popper.top -= offsets[1];\n    } else if (basePlacement === 'bottom') {\n      popper.left += offsets[0];\n      popper.top += offsets[1];\n    }\n    data.popper = popper;\n    return data;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function preventOverflow(data, options) {\n    var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n    // If offsetParent is the reference element, we really want to\n    // go one step up and use the next offsetParent as reference to\n    // avoid to make this modifier completely useless and look like broken\n    if (data.instance.reference === boundariesElement) {\n      boundariesElement = getOffsetParent(boundariesElement);\n    }\n    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);\n    options.boundaries = boundaries;\n    var order = options.priority;\n    var popper = data.offsets.popper;\n    var check = {\n      primary: function primary(placement) {\n        var value = popper[placement];\n        if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n          value = Math.max(popper[placement], boundaries[placement]);\n        }\n        return defineProperty({}, placement, value);\n      },\n      secondary: function secondary(placement) {\n        var mainSide = placement === 'right' ? 'left' : 'top';\n        var value = popper[mainSide];\n        if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n          value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n        }\n        return defineProperty({}, mainSide, value);\n      }\n    };\n    order.forEach(function (placement) {\n      var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n      popper = _extends({}, popper, check[side](placement));\n    });\n    data.offsets.popper = popper;\n    return data;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function shift(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var shiftvariation = placement.split('-')[1];\n\n    // if shift shiftvariation is specified, run the modifier\n    if (shiftvariation) {\n      var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n      var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n      var side = isVertical ? 'left' : 'top';\n      var measurement = isVertical ? 'width' : 'height';\n      var shiftOffsets = {\n        start: defineProperty({}, side, reference[side]),\n        end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n      };\n      data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n    }\n    return data;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by update method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function hide(data) {\n    if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n      return data;\n    }\n    var refRect = data.offsets.reference;\n    var bound = find(data.instance.modifiers, function (modifier) {\n      return modifier.name === 'preventOverflow';\n    }).boundaries;\n    if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === true) {\n        return data;\n      }\n      data.hide = true;\n      data.attributes['x-out-of-boundaries'] = '';\n    } else {\n      // Avoid unnecessary DOM access if visibility hasn't changed\n      if (data.hide === false) {\n        return data;\n      }\n      data.hide = false;\n      data.attributes['x-out-of-boundaries'] = false;\n    }\n    return data;\n  }\n\n  /**\r\n   * @function\r\n   * @memberof Modifiers\r\n   * @argument {Object} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {Object} The data object, properly modified\r\n   */\n  function inner(data) {\n    var placement = data.placement;\n    var basePlacement = placement.split('-')[0];\n    var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n    var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n    var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n    popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n    data.placement = getOppositePlacement(placement);\n    data.offsets.popper = getClientRect(popper);\n    return data;\n  }\n\n  /**\r\n   * Modifier function, each modifier can have a function of this type assigned\r\n   * to its `fn` property.<br />\r\n   * These functions will be called on each update, this means that you must\r\n   * make sure they are performant enough to avoid performance bottlenecks.\r\n   *\r\n   * @function ModifierFn\r\n   * @argument {dataObject} data - The data object generated by `update` method\r\n   * @argument {Object} options - Modifiers configuration and options\r\n   * @returns {dataObject} The data object, properly modified\r\n   */\n\n  /**\r\n   * Modifiers are plugins used to alter the behavior of your poppers.<br />\r\n   * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\r\n   * needed by the library.\r\n   *\r\n   * Usually you don't want to override the `order`, `fn` and `onLoad` props.\r\n   * All the other properties are configurations that could be tweaked.\r\n   * @namespace modifiers\r\n   */\n  var modifiers = {\n    /**\r\n     * Modifier used to shift the popper on the start or end of its reference\r\n     * element.<br />\r\n     * It will read the variation of the `placement` property.<br />\r\n     * It can be one either `-end` or `-start`.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    shift: {\n      /** @prop {number} order=100 - Index used to define the order of execution */\n      order: 100,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: shift\n    },\n    /**\r\n     * The `offset` modifier can shift your popper on both its axis.\r\n     *\r\n     * It accepts the following units:\r\n     * - `px` or unitless, interpreted as pixels\r\n     * - `%` or `%r`, percentage relative to the length of the reference element\r\n     * - `%p`, percentage relative to the length of the popper element\r\n     * - `vw`, CSS viewport width unit\r\n     * - `vh`, CSS viewport height unit\r\n     *\r\n     * For length is intended the main axis relative to the placement of the popper.<br />\r\n     * This means that if the placement is `top` or `bottom`, the length will be the\r\n     * `width`. In case of `left` or `right`, it will be the height.\r\n     *\r\n     * You can provide a single value (as `Number` or `String`), or a pair of values\r\n     * as `String` divided by a comma or one (or more) white spaces.<br />\r\n     * The latter is a deprecated method because it leads to confusion and will be\r\n     * removed in v2.<br />\r\n     * Additionally, it accepts additions and subtractions between different units.\r\n     * Note that multiplications and divisions aren't supported.\r\n     *\r\n     * Valid examples are:\r\n     * ```\r\n     * 10\r\n     * '10%'\r\n     * '10, 10'\r\n     * '10%, 10'\r\n     * '10 + 10%'\r\n     * '10 - 5vh + 3%'\r\n     * '-10px + 5vh, 5px - 6%'\r\n     * ```\r\n     * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\r\n     * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\r\n     * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    offset: {\n      /** @prop {number} order=200 - Index used to define the order of execution */\n      order: 200,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: offset,\n      /** @prop {Number|String} offset=0\r\n       * The offset value as described in the modifier description\r\n       */\n      offset: 0\n    },\n    /**\r\n     * Modifier used to prevent the popper from being positioned outside the boundary.\r\n     *\r\n     * An scenario exists where the reference itself is not within the boundaries.<br />\r\n     * We can say it has \"escaped the boundaries\" â€” or just \"escaped\".<br />\r\n     * In this case we need to decide whether the popper should either:\r\n     *\r\n     * - detach from the reference and remain \"trapped\" in the boundaries, or\r\n     * - if it should ignore the boundary and \"escape with its reference\"\r\n     *\r\n     * When `escapeWithReference` is set to`true` and reference is completely\r\n     * outside its boundaries, the popper will overflow (or completely leave)\r\n     * the boundaries in order to remain attached to the edge of the reference.\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    preventOverflow: {\n      /** @prop {number} order=300 - Index used to define the order of execution */\n      order: 300,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: preventOverflow,\n      /**\r\n       * @prop {Array} [priority=['left','right','top','bottom']]\r\n       * Popper will try to prevent overflow following these priorities by default,\r\n       * then, it could overflow on the left and on top of the `boundariesElement`\r\n       */\n      priority: ['left', 'right', 'top', 'bottom'],\n      /**\r\n       * @prop {number} padding=5\r\n       * Amount of pixel used to define a minimum distance between the boundaries\r\n       * and the popper this makes sure the popper has always a little padding\r\n       * between the edges of its container\r\n       */\n      padding: 5,\n      /**\r\n       * @prop {String|HTMLElement} boundariesElement='scrollParent'\r\n       * Boundaries used by the modifier, can be `scrollParent`, `window`,\r\n       * `viewport` or any DOM element.\r\n       */\n      boundariesElement: 'scrollParent'\n    },\n    /**\r\n     * Modifier used to make sure the reference and its popper stay near eachothers\r\n     * without leaving any gap between the two. Expecially useful when the arrow is\r\n     * enabled and you want to assure it to point to its reference element.\r\n     * It cares only about the first axis, you can still have poppers with margin\r\n     * between the popper and its reference element.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    keepTogether: {\n      /** @prop {number} order=400 - Index used to define the order of execution */\n      order: 400,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: keepTogether\n    },\n    /**\r\n     * This modifier is used to move the `arrowElement` of the popper to make\r\n     * sure it is positioned between the reference element and its popper element.\r\n     * It will read the outer size of the `arrowElement` node to detect how many\r\n     * pixels of conjuction are needed.\r\n     *\r\n     * It has no effect if no `arrowElement` is provided.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    arrow: {\n      /** @prop {number} order=500 - Index used to define the order of execution */\n      order: 500,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: arrow,\n      /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n      element: '[x-arrow]'\n    },\n    /**\r\n     * Modifier used to flip the popper's placement when it starts to overlap its\r\n     * reference element.\r\n     *\r\n     * Requires the `preventOverflow` modifier before it in order to work.\r\n     *\r\n     * **NOTE:** this modifier will interrupt the current update cycle and will\r\n     * restart it if it detects the need to flip the placement.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    flip: {\n      /** @prop {number} order=600 - Index used to define the order of execution */\n      order: 600,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: flip,\n      /**\r\n       * @prop {String|Array} behavior='flip'\r\n       * The behavior used to change the popper's placement. It can be one of\r\n       * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\r\n       * placements (with optional variations).\r\n       */\n      behavior: 'flip',\n      /**\r\n       * @prop {number} padding=5\r\n       * The popper will flip if it hits the edges of the `boundariesElement`\r\n       */\n      padding: 5,\n      /**\r\n       * @prop {String|HTMLElement} boundariesElement='viewport'\r\n       * The element which will define the boundaries of the popper position,\r\n       * the popper will never be placed outside of the defined boundaries\r\n       * (except if keepTogether is enabled)\r\n       */\n      boundariesElement: 'viewport'\n    },\n    /**\r\n     * Modifier used to make the popper flow toward the inner of the reference element.\r\n     * By default, when this modifier is disabled, the popper will be placed outside\r\n     * the reference element.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    inner: {\n      /** @prop {number} order=700 - Index used to define the order of execution */\n      order: 700,\n      /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n      enabled: false,\n      /** @prop {ModifierFn} */\n      fn: inner\n    },\n    /**\r\n     * Modifier used to hide the popper when its reference element is outside of the\r\n     * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\r\n     * be used to hide with a CSS selector the popper when its reference is\r\n     * out of boundaries.\r\n     *\r\n     * Requires the `preventOverflow` modifier before it in order to work.\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    hide: {\n      /** @prop {number} order=800 - Index used to define the order of execution */\n      order: 800,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: hide\n    },\n    /**\r\n     * Computes the style that will be applied to the popper element to gets\r\n     * properly positioned.\r\n     *\r\n     * Note that this modifier will not touch the DOM, it just prepares the styles\r\n     * so that `applyStyle` modifier can apply it. This separation is useful\r\n     * in case you need to replace `applyStyle` with a custom implementation.\r\n     *\r\n     * This modifier has `850` as `order` value to maintain backward compatibility\r\n     * with previous versions of Popper.js. Expect the modifiers ordering method\r\n     * to change in future major versions of the library.\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    computeStyle: {\n      /** @prop {number} order=850 - Index used to define the order of execution */\n      order: 850,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: computeStyle,\n      /**\r\n       * @prop {Boolean} gpuAcceleration=true\r\n       * If true, it uses the CSS 3d transformation to position the popper.\r\n       * Otherwise, it will use the `top` and `left` properties.\r\n       */\n      gpuAcceleration: true,\n      /**\r\n       * @prop {string} [x='bottom']\r\n       * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\r\n       * Change this if your popper should grow in a direction different from `bottom`\r\n       */\n      x: 'bottom',\n      /**\r\n       * @prop {string} [x='left']\r\n       * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\r\n       * Change this if your popper should grow in a direction different from `right`\r\n       */\n      y: 'right'\n    },\n    /**\r\n     * Applies the computed styles to the popper element.\r\n     *\r\n     * All the DOM manipulations are limited to this modifier. This is useful in case\r\n     * you want to integrate Popper.js inside a framework or view library and you\r\n     * want to delegate all the DOM manipulations to it.\r\n     *\r\n     * Note that if you disable this modifier, you must make sure the popper element\r\n     * has its position set to `absolute` before Popper.js can do its work!\r\n     *\r\n     * Just disable this modifier and define you own to achieve the desired effect.\r\n     *\r\n     * @memberof modifiers\r\n     * @inner\r\n     */\n    applyStyle: {\n      /** @prop {number} order=900 - Index used to define the order of execution */\n      order: 900,\n      /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n      enabled: true,\n      /** @prop {ModifierFn} */\n      fn: applyStyle,\n      /** @prop {Function} */\n      onLoad: applyStyleOnLoad,\n      /**\r\n       * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\r\n       * @prop {Boolean} gpuAcceleration=true\r\n       * If true, it uses the CSS 3d transformation to position the popper.\r\n       * Otherwise, it will use the `top` and `left` properties.\r\n       */\n      gpuAcceleration: undefined\n    }\n  };\n\n  /**\r\n   * The `dataObject` is an object containing all the informations used by Popper.js\r\n   * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\r\n   * @name dataObject\r\n   * @property {Object} data.instance The Popper.js instance\r\n   * @property {String} data.placement Placement applied to popper\r\n   * @property {String} data.originalPlacement Placement originally defined on init\r\n   * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\r\n   * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\r\n   * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\r\n   * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\r\n   * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\r\n   * @property {Object} data.boundaries Offsets of the popper boundaries\r\n   * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\r\n   * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\r\n   * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\r\n   * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\r\n   */\n\n  /**\r\n   * Default options provided to Popper.js constructor.<br />\r\n   * These can be overriden using the `options` argument of Popper.js.<br />\r\n   * To override an option, simply pass as 3rd argument an object with the same\r\n   * structure of this object, example:\r\n   * ```\r\n   * new Popper(ref, pop, {\r\n   *   modifiers: {\r\n   *     preventOverflow: { enabled: false }\r\n   *   }\r\n   * })\r\n   * ```\r\n   * @type {Object}\r\n   * @static\r\n   * @memberof Popper\r\n   */\n  var Defaults = {\n    /**\r\n     * Popper's placement\r\n     * @prop {Popper.placements} placement='bottom'\r\n     */\n    placement: 'bottom',\n    /**\r\n     * Whether events (resize, scroll) are initially enabled\r\n     * @prop {Boolean} eventsEnabled=true\r\n     */\n    eventsEnabled: true,\n    /**\r\n     * Set to true if you want to automatically remove the popper when\r\n     * you call the `destroy` method.\r\n     * @prop {Boolean} removeOnDestroy=false\r\n     */\n    removeOnDestroy: false,\n    /**\r\n     * Callback called when the popper is created.<br />\r\n     * By default, is set to no-op.<br />\r\n     * Access Popper.js instance with `data.instance`.\r\n     * @prop {onCreate}\r\n     */\n    onCreate: function onCreate() {},\n    /**\r\n     * Callback called when the popper is updated, this callback is not called\r\n     * on the initialization/creation of the popper, but only on subsequent\r\n     * updates.<br />\r\n     * By default, is set to no-op.<br />\r\n     * Access Popper.js instance with `data.instance`.\r\n     * @prop {onUpdate}\r\n     */\n    onUpdate: function onUpdate() {},\n    /**\r\n     * List of modifiers used to modify the offsets before they are applied to the popper.\r\n     * They provide most of the functionalities of Popper.js\r\n     * @prop {modifiers}\r\n     */\n    modifiers: modifiers\n  };\n\n  /**\r\n   * @callback onCreate\r\n   * @param {dataObject} data\r\n   */\n\n  /**\r\n   * @callback onUpdate\r\n   * @param {dataObject} data\r\n   */\n\n  // Utils\n  // Methods\n  var Popper = function () {\n    /**\r\n     * Create a new Popper.js instance\r\n     * @class Popper\r\n     * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\r\n     * @param {HTMLElement} popper - The HTML element used as popper.\r\n     * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\r\n     * @return {Object} instance - The generated Popper.js instance\r\n     */\n    function Popper(reference, popper) {\n      var _this = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      classCallCheck(this, Popper);\n      this.scheduleUpdate = function () {\n        return requestAnimationFrame(_this.update);\n      };\n\n      // make update() debounced, so that it only runs at most once-per-tick\n      this.update = debounce(this.update.bind(this));\n\n      // with {} we create a new object with the options inside it\n      this.options = _extends({}, Popper.Defaults, options);\n\n      // init state\n      this.state = {\n        isDestroyed: false,\n        isCreated: false,\n        scrollParents: []\n      };\n\n      // get reference and popper elements (allow jQuery wrappers)\n      this.reference = reference && reference.jquery ? reference[0] : reference;\n      this.popper = popper && popper.jquery ? popper[0] : popper;\n\n      // Deep merge modifiers options\n      this.options.modifiers = {};\n      Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n        _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n      });\n\n      // Refactoring modifiers' list (Object => Array)\n      this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n        return _extends({\n          name: name\n        }, _this.options.modifiers[name]);\n      })\n      // sort the modifiers by order\n      .sort(function (a, b) {\n        return a.order - b.order;\n      });\n\n      // modifiers have the ability to execute arbitrary code when Popper.js get inited\n      // such code is executed in the same order of its modifier\n      // they could add new properties to their options configuration\n      // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n      this.modifiers.forEach(function (modifierOptions) {\n        if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n          modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n        }\n      });\n\n      // fire the first update to position the popper in the right place\n      this.update();\n      var eventsEnabled = this.options.eventsEnabled;\n      if (eventsEnabled) {\n        // setup event listeners, they will take care of update the position in specific situations\n        this.enableEventListeners();\n      }\n      this.state.eventsEnabled = eventsEnabled;\n    }\n\n    // We can't use class properties because they don't get listed in the\n    // class prototype and break stuff like Sinon stubs\n\n    createClass(Popper, [{\n      key: 'update',\n      value: function update$$1() {\n        return update.call(this);\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy$$1() {\n        return destroy.call(this);\n      }\n    }, {\n      key: 'enableEventListeners',\n      value: function enableEventListeners$$1() {\n        return enableEventListeners.call(this);\n      }\n    }, {\n      key: 'disableEventListeners',\n      value: function disableEventListeners$$1() {\n        return disableEventListeners.call(this);\n      }\n\n      /**\r\n       * Schedule an update, it will run on the next UI update available\r\n       * @method scheduleUpdate\r\n       * @memberof Popper\r\n       */\n\n      /**\r\n       * Collection of utilities useful when writing custom modifiers.\r\n       * Starting from version 1.7, this method is available only if you\r\n       * include `popper-utils.js` before `popper.js`.\r\n       *\r\n       * **DEPRECATION**: This way to access PopperUtils is deprecated\r\n       * and will be removed in v2! Use the PopperUtils module directly instead.\r\n       * Due to the high instability of the methods contained in Utils, we can't\r\n       * guarantee them to follow semver. Use them at your own risk!\r\n       * @static\r\n       * @private\r\n       * @type {Object}\r\n       * @deprecated since version 1.8\r\n       * @member Utils\r\n       * @memberof Popper\r\n       */\n    }]);\n\n    return Popper;\n  }();\n\n  /**\r\n   * The `referenceObject` is an object that provides an interface compatible with Popper.js\r\n   * and lets you use it as replacement of a real DOM node.<br />\r\n   * You can use this method to position a popper relatively to a set of coordinates\r\n   * in case you don't have a DOM node to use as reference.\r\n   *\r\n   * ```\r\n   * new Popper(referenceObject, popperNode);\r\n   * ```\r\n   *\r\n   * NB: This feature isn't supported in Internet Explorer 10\r\n   * @name referenceObject\r\n   * @property {Function} data.getBoundingClientRect\r\n   * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\r\n   * @property {number} data.clientWidth\r\n   * An ES6 getter that will return the width of the virtual reference element.\r\n   * @property {number} data.clientHeight\r\n   * An ES6 getter that will return the height of the virtual reference element.\r\n   */\n\n  Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n  Popper.placements = placements;\n  Popper.Defaults = Defaults;\n  return Popper;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","Popper","isBrowser","window","document","longerTimeoutBrowsers","timeoutDuration","i","length","navigator","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","setTimeout","supportsMicroTasks","debounce","isFunction","functionToCheck","getType","toString","call","getStyleComputedProperty","element","property","nodeType","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","ownerDocument","_getStyleComputedProp","overflow","overflowX","overflowY","test","getOffsetParent","offsetParent","documentElement","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","arguments","undefined","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","isIE10","isIE10$1","appVersion","getSize","computedStyle","Math","max","getWindowSizes","height","width","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_extends","assign","source","hasOwnProperty","getClientRect","offsets","getBoundingClientRect","err","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","relativeOffset","innerWidth","innerHeight","offset","isFixed","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","getArea","_ref","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","area","sort","a","b","filteredAreas","filter","_ref2","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","findIndex","prop","cur","match","runModifiers","modifiers","data","ends","modifiersToRun","slice","forEach","console","warn","enabled","update","isDestroyed","arrowStyles","attributes","flipped","options","flip","originalPlacement","position","isCreated","onCreate","onUpdate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","disableEventListeners","removeOnDestroy","removeChild","getWindow","defaultView","attachToScrollParents","event","callback","scrollParents","isBody","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","cancelAnimationFrame","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","setAttribute","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","floor","prefixedProperty","willChange","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets$arrow","querySelector","_data$offsets","isVertical","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","round","getOppositeVariation","placements","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","priority","primary","escapeWithReference","secondary","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","onLoad","Defaults","_this","requestAnimationFrame","bind","jquery","update$$1","destroy$$1","enableEventListeners$$1","disableEventListeners$$1","Utils","PopperUtils"],"sources":["/Users/aysglavcu/Desktop/HexaShop/src/assets/js/popper.js"],"sourcesContent":["/**!\r\n * @fileOverview Kickass library to create and place poppers near their reference elements.\r\n * @version 1.12.9\r\n * @license\r\n * Copyright (c) 2016 Federico Zivolo and contributors\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n(function (global, factory) {\r\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n\ttypeof define === 'function' && define.amd ? define(factory) :\r\n\t(global.Popper = factory());\r\n}(this, (function () { 'use strict';\r\n\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\r\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\r\nvar timeoutDuration = 0;\r\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\r\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\r\n    timeoutDuration = 1;\r\n    break;\r\n  }\r\n}\r\n\r\nfunction microtaskDebounce(fn) {\r\n  var called = false;\r\n  return function () {\r\n    if (called) {\r\n      return;\r\n    }\r\n    called = true;\r\n    window.Promise.resolve().then(function () {\r\n      called = false;\r\n      fn();\r\n    });\r\n  };\r\n}\r\n\r\nfunction taskDebounce(fn) {\r\n  var scheduled = false;\r\n  return function () {\r\n    if (!scheduled) {\r\n      scheduled = true;\r\n      setTimeout(function () {\r\n        scheduled = false;\r\n        fn();\r\n      }, timeoutDuration);\r\n    }\r\n  };\r\n}\r\n\r\nvar supportsMicroTasks = isBrowser && window.Promise;\r\n\r\n/**\r\n* Create a debounced version of a method, that's asynchronously deferred\r\n* but called in the minimum time possible.\r\n*\r\n* @method\r\n* @memberof Popper.Utils\r\n* @argument {Function} fn\r\n* @returns {Function}\r\n*/\r\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\r\n\r\n/**\r\n * Check if the given variable is a function\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Any} functionToCheck - variable to check\r\n * @returns {Boolean} answer to: is a function?\r\n */\r\nfunction isFunction(functionToCheck) {\r\n  var getType = {};\r\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Get CSS computed property of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Eement} element\r\n * @argument {String} property\r\n */\r\nfunction getStyleComputedProperty(element, property) {\r\n  if (element.nodeType !== 1) {\r\n    return [];\r\n  }\r\n  // NOTE: 1 DOM access here\r\n  var css = getComputedStyle(element, null);\r\n  return property ? css[property] : css;\r\n}\r\n\r\n/**\r\n * Returns the parentNode or the host of the element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} parent\r\n */\r\nfunction getParentNode(element) {\r\n  if (element.nodeName === 'HTML') {\r\n    return element;\r\n  }\r\n  return element.parentNode || element.host;\r\n}\r\n\r\n/**\r\n * Returns the scrolling parent of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} scroll parent\r\n */\r\nfunction getScrollParent(element) {\r\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\r\n  if (!element) {\r\n    return document.body;\r\n  }\r\n\r\n  switch (element.nodeName) {\r\n    case 'HTML':\r\n    case 'BODY':\r\n      return element.ownerDocument.body;\r\n    case '#document':\r\n      return element.body;\r\n  }\r\n\r\n  // Firefox want us to check `-x` and `-y` variations as well\r\n\r\n  var _getStyleComputedProp = getStyleComputedProperty(element),\r\n      overflow = _getStyleComputedProp.overflow,\r\n      overflowX = _getStyleComputedProp.overflowX,\r\n      overflowY = _getStyleComputedProp.overflowY;\r\n\r\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\r\n    return element;\r\n  }\r\n\r\n  return getScrollParent(getParentNode(element));\r\n}\r\n\r\n/**\r\n * Returns the offset parent of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Element} offset parent\r\n */\r\nfunction getOffsetParent(element) {\r\n  // NOTE: 1 DOM access here\r\n  var offsetParent = element && element.offsetParent;\r\n  var nodeName = offsetParent && offsetParent.nodeName;\r\n\r\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\r\n    if (element) {\r\n      return element.ownerDocument.documentElement;\r\n    }\r\n\r\n    return document.documentElement;\r\n  }\r\n\r\n  // .offsetParent will return the closest TD or TABLE in case\r\n  // no offsetParent is present, I hate this job...\r\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\r\n    return getOffsetParent(offsetParent);\r\n  }\r\n\r\n  return offsetParent;\r\n}\r\n\r\nfunction isOffsetContainer(element) {\r\n  var nodeName = element.nodeName;\r\n\r\n  if (nodeName === 'BODY') {\r\n    return false;\r\n  }\r\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\r\n}\r\n\r\n/**\r\n * Finds the root node (document, shadowDOM root) of the given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} node\r\n * @returns {Element} root node\r\n */\r\nfunction getRoot(node) {\r\n  if (node.parentNode !== null) {\r\n    return getRoot(node.parentNode);\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\n/**\r\n * Finds the offset parent common to the two provided nodes\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element1\r\n * @argument {Element} element2\r\n * @returns {Element} common offset parent\r\n */\r\nfunction findCommonOffsetParent(element1, element2) {\r\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\r\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\r\n    return document.documentElement;\r\n  }\r\n\r\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\r\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\r\n  var start = order ? element1 : element2;\r\n  var end = order ? element2 : element1;\r\n\r\n  // Get common ancestor container\r\n  var range = document.createRange();\r\n  range.setStart(start, 0);\r\n  range.setEnd(end, 0);\r\n  var commonAncestorContainer = range.commonAncestorContainer;\r\n\r\n  // Both nodes are inside #document\r\n\r\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\r\n    if (isOffsetContainer(commonAncestorContainer)) {\r\n      return commonAncestorContainer;\r\n    }\r\n\r\n    return getOffsetParent(commonAncestorContainer);\r\n  }\r\n\r\n  // one of the nodes is inside shadowDOM, find which one\r\n  var element1root = getRoot(element1);\r\n  if (element1root.host) {\r\n    return findCommonOffsetParent(element1root.host, element2);\r\n  } else {\r\n    return findCommonOffsetParent(element1, getRoot(element2).host);\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the scroll value of the given element in the given side (top and left)\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @argument {String} side `top` or `left`\r\n * @returns {number} amount of scrolled pixels\r\n */\r\nfunction getScroll(element) {\r\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\r\n\r\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\r\n  var nodeName = element.nodeName;\r\n\r\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\r\n    var html = element.ownerDocument.documentElement;\r\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\r\n    return scrollingElement[upperSide];\r\n  }\r\n\r\n  return element[upperSide];\r\n}\r\n\r\n/*\r\n * Sum or subtract the element scroll values (left and top) from a given rect object\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} rect - Rect object you want to change\r\n * @param {HTMLElement} element - The element from the function reads the scroll values\r\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\r\n * @return {Object} rect - The modifier rect object\r\n */\r\nfunction includeScroll(rect, element) {\r\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n\r\n  var scrollTop = getScroll(element, 'top');\r\n  var scrollLeft = getScroll(element, 'left');\r\n  var modifier = subtract ? -1 : 1;\r\n  rect.top += scrollTop * modifier;\r\n  rect.bottom += scrollTop * modifier;\r\n  rect.left += scrollLeft * modifier;\r\n  rect.right += scrollLeft * modifier;\r\n  return rect;\r\n}\r\n\r\n/*\r\n * Helper to detect borders of a given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {CSSStyleDeclaration} styles\r\n * Result of `getStyleComputedProperty` on the given element\r\n * @param {String} axis - `x` or `y`\r\n * @return {number} borders - The borders size of the given axis\r\n */\r\n\r\nfunction getBordersSize(styles, axis) {\r\n  var sideA = axis === 'x' ? 'Left' : 'Top';\r\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\r\n\r\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\r\n}\r\n\r\n/**\r\n * Tells if you are running Internet Explorer 10\r\n * @method\r\n * @memberof Popper.Utils\r\n * @returns {Boolean} isIE10\r\n */\r\nvar isIE10 = undefined;\r\n\r\nvar isIE10$1 = function () {\r\n  if (isIE10 === undefined) {\r\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\r\n  }\r\n  return isIE10;\r\n};\r\n\r\nfunction getSize(axis, body, html, computedStyle) {\r\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\r\n}\r\n\r\nfunction getWindowSizes() {\r\n  var body = document.body;\r\n  var html = document.documentElement;\r\n  var computedStyle = isIE10$1() && getComputedStyle(html);\r\n\r\n  return {\r\n    height: getSize('Height', body, html, computedStyle),\r\n    width: getSize('Width', body, html, computedStyle)\r\n  };\r\n}\r\n\r\nvar classCallCheck = function (instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n};\r\n\r\nvar createClass = function () {\r\n  function defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n      var descriptor = props[i];\r\n      descriptor.enumerable = descriptor.enumerable || false;\r\n      descriptor.configurable = true;\r\n      if (\"value\" in descriptor) descriptor.writable = true;\r\n      Object.defineProperty(target, descriptor.key, descriptor);\r\n    }\r\n  }\r\n\r\n  return function (Constructor, protoProps, staticProps) {\r\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\r\n    if (staticProps) defineProperties(Constructor, staticProps);\r\n    return Constructor;\r\n  };\r\n}();\r\n\r\n\r\n\r\n\r\n\r\nvar defineProperty = function (obj, key, value) {\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\nvar _extends = Object.assign || function (target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i];\r\n\r\n    for (var key in source) {\r\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n        target[key] = source[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return target;\r\n};\r\n\r\n/**\r\n * Given element offsets, generate an output similar to getBoundingClientRect\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Object} offsets\r\n * @returns {Object} ClientRect like output\r\n */\r\nfunction getClientRect(offsets) {\r\n  return _extends({}, offsets, {\r\n    right: offsets.left + offsets.width,\r\n    bottom: offsets.top + offsets.height\r\n  });\r\n}\r\n\r\n/**\r\n * Get bounding client rect of given element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {HTMLElement} element\r\n * @return {Object} client rect\r\n */\r\nfunction getBoundingClientRect(element) {\r\n  var rect = {};\r\n\r\n  // IE10 10 FIX: Please, don't ask, the element isn't\r\n  // considered in DOM in some circumstances...\r\n  // This isn't reproducible in IE10 compatibility mode of IE11\r\n  if (isIE10$1()) {\r\n    try {\r\n      rect = element.getBoundingClientRect();\r\n      var scrollTop = getScroll(element, 'top');\r\n      var scrollLeft = getScroll(element, 'left');\r\n      rect.top += scrollTop;\r\n      rect.left += scrollLeft;\r\n      rect.bottom += scrollTop;\r\n      rect.right += scrollLeft;\r\n    } catch (err) {}\r\n  } else {\r\n    rect = element.getBoundingClientRect();\r\n  }\r\n\r\n  var result = {\r\n    left: rect.left,\r\n    top: rect.top,\r\n    width: rect.right - rect.left,\r\n    height: rect.bottom - rect.top\r\n  };\r\n\r\n  // subtract scrollbar size from sizes\r\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\r\n  var width = sizes.width || element.clientWidth || result.right - result.left;\r\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\r\n\r\n  var horizScrollbar = element.offsetWidth - width;\r\n  var vertScrollbar = element.offsetHeight - height;\r\n\r\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\r\n  // we make this check conditional for performance reasons\r\n  if (horizScrollbar || vertScrollbar) {\r\n    var styles = getStyleComputedProperty(element);\r\n    horizScrollbar -= getBordersSize(styles, 'x');\r\n    vertScrollbar -= getBordersSize(styles, 'y');\r\n\r\n    result.width -= horizScrollbar;\r\n    result.height -= vertScrollbar;\r\n  }\r\n\r\n  return getClientRect(result);\r\n}\r\n\r\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\r\n  var isIE10 = isIE10$1();\r\n  var isHTML = parent.nodeName === 'HTML';\r\n  var childrenRect = getBoundingClientRect(children);\r\n  var parentRect = getBoundingClientRect(parent);\r\n  var scrollParent = getScrollParent(children);\r\n\r\n  var styles = getStyleComputedProperty(parent);\r\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\r\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\r\n\r\n  var offsets = getClientRect({\r\n    top: childrenRect.top - parentRect.top - borderTopWidth,\r\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\r\n    width: childrenRect.width,\r\n    height: childrenRect.height\r\n  });\r\n  offsets.marginTop = 0;\r\n  offsets.marginLeft = 0;\r\n\r\n  // Subtract margins of documentElement in case it's being used as parent\r\n  // we do this only on HTML because it's the only element that behaves\r\n  // differently when margins are applied to it. The margins are included in\r\n  // the box of the documentElement, in the other cases not.\r\n  if (!isIE10 && isHTML) {\r\n    var marginTop = parseFloat(styles.marginTop, 10);\r\n    var marginLeft = parseFloat(styles.marginLeft, 10);\r\n\r\n    offsets.top -= borderTopWidth - marginTop;\r\n    offsets.bottom -= borderTopWidth - marginTop;\r\n    offsets.left -= borderLeftWidth - marginLeft;\r\n    offsets.right -= borderLeftWidth - marginLeft;\r\n\r\n    // Attach marginTop and marginLeft because in some circumstances we may need them\r\n    offsets.marginTop = marginTop;\r\n    offsets.marginLeft = marginLeft;\r\n  }\r\n\r\n  if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\r\n    offsets = includeScroll(offsets, parent);\r\n  }\r\n\r\n  return offsets;\r\n}\r\n\r\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\r\n  var html = element.ownerDocument.documentElement;\r\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\r\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\r\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\r\n\r\n  var scrollTop = getScroll(html);\r\n  var scrollLeft = getScroll(html, 'left');\r\n\r\n  var offset = {\r\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\r\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\r\n    width: width,\r\n    height: height\r\n  };\r\n\r\n  return getClientRect(offset);\r\n}\r\n\r\n/**\r\n * Check if the given element is fixed or is inside a fixed parent\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @argument {Element} customContainer\r\n * @returns {Boolean} answer to \"isFixed?\"\r\n */\r\nfunction isFixed(element) {\r\n  var nodeName = element.nodeName;\r\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\r\n    return false;\r\n  }\r\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\r\n    return true;\r\n  }\r\n  return isFixed(getParentNode(element));\r\n}\r\n\r\n/**\r\n * Computed the boundaries limits and return them\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {HTMLElement} popper\r\n * @param {HTMLElement} reference\r\n * @param {number} padding\r\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\r\n * @returns {Object} Coordinates of the boundaries\r\n */\r\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\r\n  // NOTE: 1 DOM access here\r\n  var boundaries = { top: 0, left: 0 };\r\n  var offsetParent = findCommonOffsetParent(popper, reference);\r\n\r\n  // Handle viewport case\r\n  if (boundariesElement === 'viewport') {\r\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\r\n  } else {\r\n    // Handle other cases based on DOM element used as boundaries\r\n    var boundariesNode = void 0;\r\n    if (boundariesElement === 'scrollParent') {\r\n      boundariesNode = getScrollParent(getParentNode(reference));\r\n      if (boundariesNode.nodeName === 'BODY') {\r\n        boundariesNode = popper.ownerDocument.documentElement;\r\n      }\r\n    } else if (boundariesElement === 'window') {\r\n      boundariesNode = popper.ownerDocument.documentElement;\r\n    } else {\r\n      boundariesNode = boundariesElement;\r\n    }\r\n\r\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);\r\n\r\n    // In case of HTML, we need a different computation\r\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\r\n      var _getWindowSizes = getWindowSizes(),\r\n          height = _getWindowSizes.height,\r\n          width = _getWindowSizes.width;\r\n\r\n      boundaries.top += offsets.top - offsets.marginTop;\r\n      boundaries.bottom = height + offsets.top;\r\n      boundaries.left += offsets.left - offsets.marginLeft;\r\n      boundaries.right = width + offsets.left;\r\n    } else {\r\n      // for all the other DOM elements, this one is good\r\n      boundaries = offsets;\r\n    }\r\n  }\r\n\r\n  // Add paddings\r\n  boundaries.left += padding;\r\n  boundaries.top += padding;\r\n  boundaries.right -= padding;\r\n  boundaries.bottom -= padding;\r\n\r\n  return boundaries;\r\n}\r\n\r\nfunction getArea(_ref) {\r\n  var width = _ref.width,\r\n      height = _ref.height;\r\n\r\n  return width * height;\r\n}\r\n\r\n/**\r\n * Utility used to transform the `auto` placement to the placement with more\r\n * available space.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\r\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\r\n\r\n  if (placement.indexOf('auto') === -1) {\r\n    return placement;\r\n  }\r\n\r\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\r\n\r\n  var rects = {\r\n    top: {\r\n      width: boundaries.width,\r\n      height: refRect.top - boundaries.top\r\n    },\r\n    right: {\r\n      width: boundaries.right - refRect.right,\r\n      height: boundaries.height\r\n    },\r\n    bottom: {\r\n      width: boundaries.width,\r\n      height: boundaries.bottom - refRect.bottom\r\n    },\r\n    left: {\r\n      width: refRect.left - boundaries.left,\r\n      height: boundaries.height\r\n    }\r\n  };\r\n\r\n  var sortedAreas = Object.keys(rects).map(function (key) {\r\n    return _extends({\r\n      key: key\r\n    }, rects[key], {\r\n      area: getArea(rects[key])\r\n    });\r\n  }).sort(function (a, b) {\r\n    return b.area - a.area;\r\n  });\r\n\r\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\r\n    var width = _ref2.width,\r\n        height = _ref2.height;\r\n    return width >= popper.clientWidth && height >= popper.clientHeight;\r\n  });\r\n\r\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\r\n\r\n  var variation = placement.split('-')[1];\r\n\r\n  return computedPlacement + (variation ? '-' + variation : '');\r\n}\r\n\r\n/**\r\n * Get offsets to the reference element\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} state\r\n * @param {Element} popper - the popper element\r\n * @param {Element} reference - the reference element (the popper will be relative to this)\r\n * @returns {Object} An object containing the offsets which will be applied to the popper\r\n */\r\nfunction getReferenceOffsets(state, popper, reference) {\r\n  var commonOffsetParent = findCommonOffsetParent(popper, reference);\r\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\r\n}\r\n\r\n/**\r\n * Get the outer sizes of the given element (offset size + margins)\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element\r\n * @returns {Object} object containing width and height properties\r\n */\r\nfunction getOuterSizes(element) {\r\n  var styles = getComputedStyle(element);\r\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\r\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\r\n  var result = {\r\n    width: element.offsetWidth + y,\r\n    height: element.offsetHeight + x\r\n  };\r\n  return result;\r\n}\r\n\r\n/**\r\n * Get the opposite placement of the given one\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement\r\n * @returns {String} flipped placement\r\n */\r\nfunction getOppositePlacement(placement) {\r\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\r\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\r\n    return hash[matched];\r\n  });\r\n}\r\n\r\n/**\r\n * Get offsets to the popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Object} position - CSS position the Popper will get applied\r\n * @param {HTMLElement} popper - the popper element\r\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\r\n * @param {String} placement - one of the valid placement options\r\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\r\n */\r\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\r\n  placement = placement.split('-')[0];\r\n\r\n  // Get popper node sizes\r\n  var popperRect = getOuterSizes(popper);\r\n\r\n  // Add position, width and height to our offsets object\r\n  var popperOffsets = {\r\n    width: popperRect.width,\r\n    height: popperRect.height\r\n  };\r\n\r\n  // depending by the popper placement we have to compute its offsets slightly differently\r\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\r\n  var mainSide = isHoriz ? 'top' : 'left';\r\n  var secondarySide = isHoriz ? 'left' : 'top';\r\n  var measurement = isHoriz ? 'height' : 'width';\r\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\r\n\r\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\r\n  if (placement === secondarySide) {\r\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\r\n  } else {\r\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\r\n  }\r\n\r\n  return popperOffsets;\r\n}\r\n\r\n/**\r\n * Mimics the `find` method of Array\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Array} arr\r\n * @argument prop\r\n * @argument value\r\n * @returns index or -1\r\n */\r\nfunction find(arr, check) {\r\n  // use native find if supported\r\n  if (Array.prototype.find) {\r\n    return arr.find(check);\r\n  }\r\n\r\n  // use `filter` to obtain the same behavior of `find`\r\n  return arr.filter(check)[0];\r\n}\r\n\r\n/**\r\n * Return the index of the matching object\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Array} arr\r\n * @argument prop\r\n * @argument value\r\n * @returns index or -1\r\n */\r\nfunction findIndex(arr, prop, value) {\r\n  // use native findIndex if supported\r\n  if (Array.prototype.findIndex) {\r\n    return arr.findIndex(function (cur) {\r\n      return cur[prop] === value;\r\n    });\r\n  }\r\n\r\n  // use `find` + `indexOf` if `findIndex` isn't supported\r\n  var match = find(arr, function (obj) {\r\n    return obj[prop] === value;\r\n  });\r\n  return arr.indexOf(match);\r\n}\r\n\r\n/**\r\n * Loop trough the list of modifiers and run them in order,\r\n * each of them will then edit the data object.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {dataObject} data\r\n * @param {Array} modifiers\r\n * @param {String} ends - Optional modifier name used as stopper\r\n * @returns {dataObject}\r\n */\r\nfunction runModifiers(modifiers, data, ends) {\r\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\r\n\r\n  modifiersToRun.forEach(function (modifier) {\r\n    if (modifier['function']) {\r\n      // eslint-disable-line dot-notation\r\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\r\n    }\r\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\r\n    if (modifier.enabled && isFunction(fn)) {\r\n      // Add properties to offsets to make them a complete clientRect object\r\n      // we do this before each modifier to make sure the previous one doesn't\r\n      // mess with these values\r\n      data.offsets.popper = getClientRect(data.offsets.popper);\r\n      data.offsets.reference = getClientRect(data.offsets.reference);\r\n\r\n      data = fn(data, modifier);\r\n    }\r\n  });\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Updates the position of the popper, computing the new offsets and applying\r\n * the new style.<br />\r\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\r\n * @method\r\n * @memberof Popper\r\n */\r\nfunction update() {\r\n  // if popper is destroyed, don't perform any further update\r\n  if (this.state.isDestroyed) {\r\n    return;\r\n  }\r\n\r\n  var data = {\r\n    instance: this,\r\n    styles: {},\r\n    arrowStyles: {},\r\n    attributes: {},\r\n    flipped: false,\r\n    offsets: {}\r\n  };\r\n\r\n  // compute reference element offsets\r\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);\r\n\r\n  // compute auto placement, store placement inside the data object,\r\n  // modifiers will be able to edit `placement` if needed\r\n  // and refer to originalPlacement to know the original value\r\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\r\n\r\n  // store the computed placement inside `originalPlacement`\r\n  data.originalPlacement = data.placement;\r\n\r\n  // compute the popper offsets\r\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\r\n  data.offsets.popper.position = 'absolute';\r\n\r\n  // run the modifiers\r\n  data = runModifiers(this.modifiers, data);\r\n\r\n  // the first `update` will call `onCreate` callback\r\n  // the other ones will call `onUpdate` callback\r\n  if (!this.state.isCreated) {\r\n    this.state.isCreated = true;\r\n    this.options.onCreate(data);\r\n  } else {\r\n    this.options.onUpdate(data);\r\n  }\r\n}\r\n\r\n/**\r\n * Helper used to know if the given modifier is enabled.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @returns {Boolean}\r\n */\r\nfunction isModifierEnabled(modifiers, modifierName) {\r\n  return modifiers.some(function (_ref) {\r\n    var name = _ref.name,\r\n        enabled = _ref.enabled;\r\n    return enabled && name === modifierName;\r\n  });\r\n}\r\n\r\n/**\r\n * Get the prefixed supported property name\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} property (camelCase)\r\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\r\n */\r\nfunction getSupportedPropertyName(property) {\r\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\r\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\r\n\r\n  for (var i = 0; i < prefixes.length - 1; i++) {\r\n    var prefix = prefixes[i];\r\n    var toCheck = prefix ? '' + prefix + upperProp : property;\r\n    if (typeof document.body.style[toCheck] !== 'undefined') {\r\n      return toCheck;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Destroy the popper\r\n * @method\r\n * @memberof Popper\r\n */\r\nfunction destroy() {\r\n  this.state.isDestroyed = true;\r\n\r\n  // touch DOM only if `applyStyle` modifier is enabled\r\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\r\n    this.popper.removeAttribute('x-placement');\r\n    this.popper.style.left = '';\r\n    this.popper.style.position = '';\r\n    this.popper.style.top = '';\r\n    this.popper.style[getSupportedPropertyName('transform')] = '';\r\n  }\r\n\r\n  this.disableEventListeners();\r\n\r\n  // remove the popper if user explicity asked for the deletion on destroy\r\n  // do not use `remove` because IE11 doesn't support it\r\n  if (this.options.removeOnDestroy) {\r\n    this.popper.parentNode.removeChild(this.popper);\r\n  }\r\n  return this;\r\n}\r\n\r\n/**\r\n * Get the window associated with the element\r\n * @argument {Element} element\r\n * @returns {Window}\r\n */\r\nfunction getWindow(element) {\r\n  var ownerDocument = element.ownerDocument;\r\n  return ownerDocument ? ownerDocument.defaultView : window;\r\n}\r\n\r\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\r\n  var isBody = scrollParent.nodeName === 'BODY';\r\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\r\n  target.addEventListener(event, callback, { passive: true });\r\n\r\n  if (!isBody) {\r\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\r\n  }\r\n  scrollParents.push(target);\r\n}\r\n\r\n/**\r\n * Setup needed event listeners used to update the popper position\r\n * @method\r\n * @memberof Popper.Utils\r\n * @private\r\n */\r\nfunction setupEventListeners(reference, options, state, updateBound) {\r\n  // Resize event listener on window\r\n  state.updateBound = updateBound;\r\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\r\n\r\n  // Scroll event listener on scroll parents\r\n  var scrollElement = getScrollParent(reference);\r\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\r\n  state.scrollElement = scrollElement;\r\n  state.eventsEnabled = true;\r\n\r\n  return state;\r\n}\r\n\r\n/**\r\n * It will add resize/scroll events and start recalculating\r\n * position of the popper element when they are triggered.\r\n * @method\r\n * @memberof Popper\r\n */\r\nfunction enableEventListeners() {\r\n  if (!this.state.eventsEnabled) {\r\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\r\n  }\r\n}\r\n\r\n/**\r\n * Remove event listeners used to update the popper position\r\n * @method\r\n * @memberof Popper.Utils\r\n * @private\r\n */\r\nfunction removeEventListeners(reference, state) {\r\n  // Remove resize event listener on window\r\n  getWindow(reference).removeEventListener('resize', state.updateBound);\r\n\r\n  // Remove scroll event listener on scroll parents\r\n  state.scrollParents.forEach(function (target) {\r\n    target.removeEventListener('scroll', state.updateBound);\r\n  });\r\n\r\n  // Reset state\r\n  state.updateBound = null;\r\n  state.scrollParents = [];\r\n  state.scrollElement = null;\r\n  state.eventsEnabled = false;\r\n  return state;\r\n}\r\n\r\n/**\r\n * It will remove resize/scroll events and won't recalculate popper position\r\n * when they are triggered. It also won't trigger onUpdate callback anymore,\r\n * unless you call `update` method manually.\r\n * @method\r\n * @memberof Popper\r\n */\r\nfunction disableEventListeners() {\r\n  if (this.state.eventsEnabled) {\r\n    cancelAnimationFrame(this.scheduleUpdate);\r\n    this.state = removeEventListeners(this.reference, this.state);\r\n  }\r\n}\r\n\r\n/**\r\n * Tells if a given input is a number\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {*} input to check\r\n * @return {Boolean}\r\n */\r\nfunction isNumeric(n) {\r\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\n/**\r\n * Set the style to the given popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element - Element to apply the style to\r\n * @argument {Object} styles\r\n * Object with a list of properties and values which will be applied to the element\r\n */\r\nfunction setStyles(element, styles) {\r\n  Object.keys(styles).forEach(function (prop) {\r\n    var unit = '';\r\n    // add unit if the value is numeric and is one of the following\r\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\r\n      unit = 'px';\r\n    }\r\n    element.style[prop] = styles[prop] + unit;\r\n  });\r\n}\r\n\r\n/**\r\n * Set the attributes to the given popper\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {Element} element - Element to apply the attributes to\r\n * @argument {Object} styles\r\n * Object with a list of properties and values which will be applied to the element\r\n */\r\nfunction setAttributes(element, attributes) {\r\n  Object.keys(attributes).forEach(function (prop) {\r\n    var value = attributes[prop];\r\n    if (value !== false) {\r\n      element.setAttribute(prop, attributes[prop]);\r\n    } else {\r\n      element.removeAttribute(prop);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\r\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The same data object\r\n */\r\nfunction applyStyle(data) {\r\n  // any property present in `data.styles` will be applied to the popper,\r\n  // in this way we can make the 3rd party modifiers add custom styles to it\r\n  // Be aware, modifiers could override the properties defined in the previous\r\n  // lines of this modifier!\r\n  setStyles(data.instance.popper, data.styles);\r\n\r\n  // any property present in `data.attributes` will be applied to the popper,\r\n  // they will be set as HTML attributes of the element\r\n  setAttributes(data.instance.popper, data.attributes);\r\n\r\n  // if arrowElement is defined and arrowStyles has some properties\r\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\r\n    setStyles(data.arrowElement, data.arrowStyles);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Set the x-placement attribute before everything else because it could be used\r\n * to add margins to the popper margins needs to be calculated to get the\r\n * correct popper offsets.\r\n * @method\r\n * @memberof Popper.modifiers\r\n * @param {HTMLElement} reference - The reference element used to position the popper\r\n * @param {HTMLElement} popper - The HTML element used as popper.\r\n * @param {Object} options - Popper.js options\r\n */\r\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\r\n  // compute reference element offsets\r\n  var referenceOffsets = getReferenceOffsets(state, popper, reference);\r\n\r\n  // compute auto placement, store placement inside the data object,\r\n  // modifiers will be able to edit `placement` if needed\r\n  // and refer to originalPlacement to know the original value\r\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\r\n\r\n  popper.setAttribute('x-placement', placement);\r\n\r\n  // Apply `position` to popper before anything else because\r\n  // without the position applied we can't guarantee correct computations\r\n  setStyles(popper, { position: 'absolute' });\r\n\r\n  return options;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction computeStyle(data, options) {\r\n  var x = options.x,\r\n      y = options.y;\r\n  var popper = data.offsets.popper;\r\n\r\n  // Remove this legacy support in Popper.js v2\r\n\r\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\r\n    return modifier.name === 'applyStyle';\r\n  }).gpuAcceleration;\r\n  if (legacyGpuAccelerationOption !== undefined) {\r\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\r\n  }\r\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\r\n\r\n  var offsetParent = getOffsetParent(data.instance.popper);\r\n  var offsetParentRect = getBoundingClientRect(offsetParent);\r\n\r\n  // Styles\r\n  var styles = {\r\n    position: popper.position\r\n  };\r\n\r\n  // floor sides to avoid blurry text\r\n  var offsets = {\r\n    left: Math.floor(popper.left),\r\n    top: Math.floor(popper.top),\r\n    bottom: Math.floor(popper.bottom),\r\n    right: Math.floor(popper.right)\r\n  };\r\n\r\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\r\n  var sideB = y === 'right' ? 'left' : 'right';\r\n\r\n  // if gpuAcceleration is set to `true` and transform is supported,\r\n  //  we use `translate3d` to apply the position to the popper we\r\n  // automatically use the supported prefixed version if needed\r\n  var prefixedProperty = getSupportedPropertyName('transform');\r\n\r\n  // now, let's make a step back and look at this code closely (wtf?)\r\n  // If the content of the popper grows once it's been positioned, it\r\n  // may happen that the popper gets misplaced because of the new content\r\n  // overflowing its reference element\r\n  // To avoid this problem, we provide two options (x and y), which allow\r\n  // the consumer to define the offset origin.\r\n  // If we position a popper on top of a reference element, we can set\r\n  // `x` to `top` to make the popper grow towards its top instead of\r\n  // its bottom.\r\n  var left = void 0,\r\n      top = void 0;\r\n  if (sideA === 'bottom') {\r\n    top = -offsetParentRect.height + offsets.bottom;\r\n  } else {\r\n    top = offsets.top;\r\n  }\r\n  if (sideB === 'right') {\r\n    left = -offsetParentRect.width + offsets.right;\r\n  } else {\r\n    left = offsets.left;\r\n  }\r\n  if (gpuAcceleration && prefixedProperty) {\r\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\r\n    styles[sideA] = 0;\r\n    styles[sideB] = 0;\r\n    styles.willChange = 'transform';\r\n  } else {\r\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\r\n    var invertTop = sideA === 'bottom' ? -1 : 1;\r\n    var invertLeft = sideB === 'right' ? -1 : 1;\r\n    styles[sideA] = top * invertTop;\r\n    styles[sideB] = left * invertLeft;\r\n    styles.willChange = sideA + ', ' + sideB;\r\n  }\r\n\r\n  // Attributes\r\n  var attributes = {\r\n    'x-placement': data.placement\r\n  };\r\n\r\n  // Update `data` attributes, styles and arrowStyles\r\n  data.attributes = _extends({}, attributes, data.attributes);\r\n  data.styles = _extends({}, styles, data.styles);\r\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Helper used to know if the given modifier depends from another one.<br />\r\n * It checks if the needed modifier is listed and enabled.\r\n * @method\r\n * @memberof Popper.Utils\r\n * @param {Array} modifiers - list of modifiers\r\n * @param {String} requestingName - name of requesting modifier\r\n * @param {String} requestedName - name of requested modifier\r\n * @returns {Boolean}\r\n */\r\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\r\n  var requesting = find(modifiers, function (_ref) {\r\n    var name = _ref.name;\r\n    return name === requestingName;\r\n  });\r\n\r\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\r\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\r\n  });\r\n\r\n  if (!isRequired) {\r\n    var _requesting = '`' + requestingName + '`';\r\n    var requested = '`' + requestedName + '`';\r\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\r\n  }\r\n  return isRequired;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction arrow(data, options) {\r\n  var _data$offsets$arrow;\r\n\r\n  // arrow depends on keepTogether in order to work\r\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\r\n    return data;\r\n  }\r\n\r\n  var arrowElement = options.element;\r\n\r\n  // if arrowElement is a string, suppose it's a CSS selector\r\n  if (typeof arrowElement === 'string') {\r\n    arrowElement = data.instance.popper.querySelector(arrowElement);\r\n\r\n    // if arrowElement is not found, don't run the modifier\r\n    if (!arrowElement) {\r\n      return data;\r\n    }\r\n  } else {\r\n    // if the arrowElement isn't a query selector we must check that the\r\n    // provided DOM node is child of its popper node\r\n    if (!data.instance.popper.contains(arrowElement)) {\r\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\r\n      return data;\r\n    }\r\n  }\r\n\r\n  var placement = data.placement.split('-')[0];\r\n  var _data$offsets = data.offsets,\r\n      popper = _data$offsets.popper,\r\n      reference = _data$offsets.reference;\r\n\r\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\r\n\r\n  var len = isVertical ? 'height' : 'width';\r\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\r\n  var side = sideCapitalized.toLowerCase();\r\n  var altSide = isVertical ? 'left' : 'top';\r\n  var opSide = isVertical ? 'bottom' : 'right';\r\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\r\n\r\n  //\r\n  // extends keepTogether behavior making sure the popper and its\r\n  // reference have enough pixels in conjuction\r\n  //\r\n\r\n  // top/left side\r\n  if (reference[opSide] - arrowElementSize < popper[side]) {\r\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\r\n  }\r\n  // bottom/right side\r\n  if (reference[side] + arrowElementSize > popper[opSide]) {\r\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\r\n  }\r\n  data.offsets.popper = getClientRect(data.offsets.popper);\r\n\r\n  // compute center of the popper\r\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\r\n\r\n  // Compute the sideValue using the updated popper offsets\r\n  // take popper margin in account because we don't have this info available\r\n  var css = getStyleComputedProperty(data.instance.popper);\r\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\r\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\r\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\r\n\r\n  // prevent arrowElement from being placed not contiguously to its popper\r\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\r\n\r\n  data.arrowElement = arrowElement;\r\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Get the opposite placement variation of the given one\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement variation\r\n * @returns {String} flipped placement variation\r\n */\r\nfunction getOppositeVariation(variation) {\r\n  if (variation === 'end') {\r\n    return 'start';\r\n  } else if (variation === 'start') {\r\n    return 'end';\r\n  }\r\n  return variation;\r\n}\r\n\r\n/**\r\n * List of accepted placements to use as values of the `placement` option.<br />\r\n * Valid placements are:\r\n * - `auto`\r\n * - `top`\r\n * - `right`\r\n * - `bottom`\r\n * - `left`\r\n *\r\n * Each placement can have a variation from this list:\r\n * - `-start`\r\n * - `-end`\r\n *\r\n * Variations are interpreted easily if you think of them as the left to right\r\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\r\n * is right.<br />\r\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\r\n *\r\n * Some valid examples are:\r\n * - `top-end` (on top of reference, right aligned)\r\n * - `right-start` (on right of reference, top aligned)\r\n * - `bottom` (on bottom, centered)\r\n * - `auto-right` (on the side with more space available, alignment depends by placement)\r\n *\r\n * @static\r\n * @type {Array}\r\n * @enum {String}\r\n * @readonly\r\n * @method placements\r\n * @memberof Popper\r\n */\r\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\r\n\r\n// Get rid of `auto` `auto-start` and `auto-end`\r\nvar validPlacements = placements.slice(3);\r\n\r\n/**\r\n * Given an initial placement, returns all the subsequent placements\r\n * clockwise (or counter-clockwise).\r\n *\r\n * @method\r\n * @memberof Popper.Utils\r\n * @argument {String} placement - A valid placement (it accepts variations)\r\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\r\n * @returns {Array} placements including their variations\r\n */\r\nfunction clockwise(placement) {\r\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n\r\n  var index = validPlacements.indexOf(placement);\r\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\r\n  return counter ? arr.reverse() : arr;\r\n}\r\n\r\nvar BEHAVIORS = {\r\n  FLIP: 'flip',\r\n  CLOCKWISE: 'clockwise',\r\n  COUNTERCLOCKWISE: 'counterclockwise'\r\n};\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction flip(data, options) {\r\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\r\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\r\n    return data;\r\n  }\r\n\r\n  if (data.flipped && data.placement === data.originalPlacement) {\r\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\r\n    return data;\r\n  }\r\n\r\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);\r\n\r\n  var placement = data.placement.split('-')[0];\r\n  var placementOpposite = getOppositePlacement(placement);\r\n  var variation = data.placement.split('-')[1] || '';\r\n\r\n  var flipOrder = [];\r\n\r\n  switch (options.behavior) {\r\n    case BEHAVIORS.FLIP:\r\n      flipOrder = [placement, placementOpposite];\r\n      break;\r\n    case BEHAVIORS.CLOCKWISE:\r\n      flipOrder = clockwise(placement);\r\n      break;\r\n    case BEHAVIORS.COUNTERCLOCKWISE:\r\n      flipOrder = clockwise(placement, true);\r\n      break;\r\n    default:\r\n      flipOrder = options.behavior;\r\n  }\r\n\r\n  flipOrder.forEach(function (step, index) {\r\n    if (placement !== step || flipOrder.length === index + 1) {\r\n      return data;\r\n    }\r\n\r\n    placement = data.placement.split('-')[0];\r\n    placementOpposite = getOppositePlacement(placement);\r\n\r\n    var popperOffsets = data.offsets.popper;\r\n    var refOffsets = data.offsets.reference;\r\n\r\n    // using floor because the reference offsets may contain decimals we are not going to consider here\r\n    var floor = Math.floor;\r\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\r\n\r\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\r\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\r\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\r\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\r\n\r\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\r\n\r\n    // flip the variation if required\r\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\r\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\r\n\r\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\r\n      // this boolean to detect any flip loop\r\n      data.flipped = true;\r\n\r\n      if (overlapsRef || overflowsBoundaries) {\r\n        placement = flipOrder[index + 1];\r\n      }\r\n\r\n      if (flippedVariation) {\r\n        variation = getOppositeVariation(variation);\r\n      }\r\n\r\n      data.placement = placement + (variation ? '-' + variation : '');\r\n\r\n      // this object contains `position`, we want to preserve it along with\r\n      // any additional property we may add in the future\r\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\r\n\r\n      data = runModifiers(data.instance.modifiers, data, 'flip');\r\n    }\r\n  });\r\n  return data;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction keepTogether(data) {\r\n  var _data$offsets = data.offsets,\r\n      popper = _data$offsets.popper,\r\n      reference = _data$offsets.reference;\r\n\r\n  var placement = data.placement.split('-')[0];\r\n  var floor = Math.floor;\r\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\r\n  var side = isVertical ? 'right' : 'bottom';\r\n  var opSide = isVertical ? 'left' : 'top';\r\n  var measurement = isVertical ? 'width' : 'height';\r\n\r\n  if (popper[side] < floor(reference[opSide])) {\r\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\r\n  }\r\n  if (popper[opSide] > floor(reference[side])) {\r\n    data.offsets.popper[opSide] = floor(reference[side]);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Converts a string containing value + unit into a px value number\r\n * @function\r\n * @memberof {modifiers~offset}\r\n * @private\r\n * @argument {String} str - Value + unit string\r\n * @argument {String} measurement - `height` or `width`\r\n * @argument {Object} popperOffsets\r\n * @argument {Object} referenceOffsets\r\n * @returns {Number|String}\r\n * Value in pixels, or original string if no values were extracted\r\n */\r\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\r\n  // separate value from unit\r\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\r\n  var value = +split[1];\r\n  var unit = split[2];\r\n\r\n  // If it's not a number it's an operator, I guess\r\n  if (!value) {\r\n    return str;\r\n  }\r\n\r\n  if (unit.indexOf('%') === 0) {\r\n    var element = void 0;\r\n    switch (unit) {\r\n      case '%p':\r\n        element = popperOffsets;\r\n        break;\r\n      case '%':\r\n      case '%r':\r\n      default:\r\n        element = referenceOffsets;\r\n    }\r\n\r\n    var rect = getClientRect(element);\r\n    return rect[measurement] / 100 * value;\r\n  } else if (unit === 'vh' || unit === 'vw') {\r\n    // if is a vh or vw, we calculate the size based on the viewport\r\n    var size = void 0;\r\n    if (unit === 'vh') {\r\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n    } else {\r\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n    }\r\n    return size / 100 * value;\r\n  } else {\r\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\r\n    // if is an implicit unit, it's px, and we return just the value\r\n    return value;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\r\n * @function\r\n * @memberof {modifiers~offset}\r\n * @private\r\n * @argument {String} offset\r\n * @argument {Object} popperOffsets\r\n * @argument {Object} referenceOffsets\r\n * @argument {String} basePlacement\r\n * @returns {Array} a two cells array with x and y offsets in numbers\r\n */\r\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\r\n  var offsets = [0, 0];\r\n\r\n  // Use height if placement is left or right and index is 0 otherwise use width\r\n  // in this way the first offset will use an axis and the second one\r\n  // will use the other one\r\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\r\n\r\n  // Split the offset string to obtain a list of values and operands\r\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\r\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\r\n    return frag.trim();\r\n  });\r\n\r\n  // Detect if the offset string contains a pair of values or a single one\r\n  // they could be separated by comma or space\r\n  var divider = fragments.indexOf(find(fragments, function (frag) {\r\n    return frag.search(/,|\\s/) !== -1;\r\n  }));\r\n\r\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\r\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\r\n  }\r\n\r\n  // If divider is found, we divide the list of values and operands to divide\r\n  // them by ofset X and Y.\r\n  var splitRegex = /\\s*,\\s*|\\s+/;\r\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\r\n\r\n  // Convert the values with units to absolute pixels to allow our computations\r\n  ops = ops.map(function (op, index) {\r\n    // Most of the units rely on the orientation of the popper\r\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\r\n    var mergeWithPrevious = false;\r\n    return op\r\n    // This aggregates any `+` or `-` sign that aren't considered operators\r\n    // e.g.: 10 + +5 => [10, +, +5]\r\n    .reduce(function (a, b) {\r\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\r\n        a[a.length - 1] = b;\r\n        mergeWithPrevious = true;\r\n        return a;\r\n      } else if (mergeWithPrevious) {\r\n        a[a.length - 1] += b;\r\n        mergeWithPrevious = false;\r\n        return a;\r\n      } else {\r\n        return a.concat(b);\r\n      }\r\n    }, [])\r\n    // Here we convert the string values into number values (in px)\r\n    .map(function (str) {\r\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\r\n    });\r\n  });\r\n\r\n  // Loop trough the offsets arrays and execute the operations\r\n  ops.forEach(function (op, index) {\r\n    op.forEach(function (frag, index2) {\r\n      if (isNumeric(frag)) {\r\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\r\n      }\r\n    });\r\n  });\r\n  return offsets;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @argument {Number|String} options.offset=0\r\n * The offset value as described in the modifier description\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction offset(data, _ref) {\r\n  var offset = _ref.offset;\r\n  var placement = data.placement,\r\n      _data$offsets = data.offsets,\r\n      popper = _data$offsets.popper,\r\n      reference = _data$offsets.reference;\r\n\r\n  var basePlacement = placement.split('-')[0];\r\n\r\n  var offsets = void 0;\r\n  if (isNumeric(+offset)) {\r\n    offsets = [+offset, 0];\r\n  } else {\r\n    offsets = parseOffset(offset, popper, reference, basePlacement);\r\n  }\r\n\r\n  if (basePlacement === 'left') {\r\n    popper.top += offsets[0];\r\n    popper.left -= offsets[1];\r\n  } else if (basePlacement === 'right') {\r\n    popper.top += offsets[0];\r\n    popper.left += offsets[1];\r\n  } else if (basePlacement === 'top') {\r\n    popper.left += offsets[0];\r\n    popper.top -= offsets[1];\r\n  } else if (basePlacement === 'bottom') {\r\n    popper.left += offsets[0];\r\n    popper.top += offsets[1];\r\n  }\r\n\r\n  data.popper = popper;\r\n  return data;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction preventOverflow(data, options) {\r\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\r\n\r\n  // If offsetParent is the reference element, we really want to\r\n  // go one step up and use the next offsetParent as reference to\r\n  // avoid to make this modifier completely useless and look like broken\r\n  if (data.instance.reference === boundariesElement) {\r\n    boundariesElement = getOffsetParent(boundariesElement);\r\n  }\r\n\r\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);\r\n  options.boundaries = boundaries;\r\n\r\n  var order = options.priority;\r\n  var popper = data.offsets.popper;\r\n\r\n  var check = {\r\n    primary: function primary(placement) {\r\n      var value = popper[placement];\r\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\r\n        value = Math.max(popper[placement], boundaries[placement]);\r\n      }\r\n      return defineProperty({}, placement, value);\r\n    },\r\n    secondary: function secondary(placement) {\r\n      var mainSide = placement === 'right' ? 'left' : 'top';\r\n      var value = popper[mainSide];\r\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\r\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\r\n      }\r\n      return defineProperty({}, mainSide, value);\r\n    }\r\n  };\r\n\r\n  order.forEach(function (placement) {\r\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\r\n    popper = _extends({}, popper, check[side](placement));\r\n  });\r\n\r\n  data.offsets.popper = popper;\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction shift(data) {\r\n  var placement = data.placement;\r\n  var basePlacement = placement.split('-')[0];\r\n  var shiftvariation = placement.split('-')[1];\r\n\r\n  // if shift shiftvariation is specified, run the modifier\r\n  if (shiftvariation) {\r\n    var _data$offsets = data.offsets,\r\n        reference = _data$offsets.reference,\r\n        popper = _data$offsets.popper;\r\n\r\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\r\n    var side = isVertical ? 'left' : 'top';\r\n    var measurement = isVertical ? 'width' : 'height';\r\n\r\n    var shiftOffsets = {\r\n      start: defineProperty({}, side, reference[side]),\r\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\r\n    };\r\n\r\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by update method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction hide(data) {\r\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\r\n    return data;\r\n  }\r\n\r\n  var refRect = data.offsets.reference;\r\n  var bound = find(data.instance.modifiers, function (modifier) {\r\n    return modifier.name === 'preventOverflow';\r\n  }).boundaries;\r\n\r\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\r\n    // Avoid unnecessary DOM access if visibility hasn't changed\r\n    if (data.hide === true) {\r\n      return data;\r\n    }\r\n\r\n    data.hide = true;\r\n    data.attributes['x-out-of-boundaries'] = '';\r\n  } else {\r\n    // Avoid unnecessary DOM access if visibility hasn't changed\r\n    if (data.hide === false) {\r\n      return data;\r\n    }\r\n\r\n    data.hide = false;\r\n    data.attributes['x-out-of-boundaries'] = false;\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * @function\r\n * @memberof Modifiers\r\n * @argument {Object} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {Object} The data object, properly modified\r\n */\r\nfunction inner(data) {\r\n  var placement = data.placement;\r\n  var basePlacement = placement.split('-')[0];\r\n  var _data$offsets = data.offsets,\r\n      popper = _data$offsets.popper,\r\n      reference = _data$offsets.reference;\r\n\r\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\r\n\r\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\r\n\r\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\r\n\r\n  data.placement = getOppositePlacement(placement);\r\n  data.offsets.popper = getClientRect(popper);\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Modifier function, each modifier can have a function of this type assigned\r\n * to its `fn` property.<br />\r\n * These functions will be called on each update, this means that you must\r\n * make sure they are performant enough to avoid performance bottlenecks.\r\n *\r\n * @function ModifierFn\r\n * @argument {dataObject} data - The data object generated by `update` method\r\n * @argument {Object} options - Modifiers configuration and options\r\n * @returns {dataObject} The data object, properly modified\r\n */\r\n\r\n/**\r\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\r\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\r\n * needed by the library.\r\n *\r\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\r\n * All the other properties are configurations that could be tweaked.\r\n * @namespace modifiers\r\n */\r\nvar modifiers = {\r\n  /**\r\n   * Modifier used to shift the popper on the start or end of its reference\r\n   * element.<br />\r\n   * It will read the variation of the `placement` property.<br />\r\n   * It can be one either `-end` or `-start`.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  shift: {\r\n    /** @prop {number} order=100 - Index used to define the order of execution */\r\n    order: 100,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: shift\r\n  },\r\n\r\n  /**\r\n   * The `offset` modifier can shift your popper on both its axis.\r\n   *\r\n   * It accepts the following units:\r\n   * - `px` or unitless, interpreted as pixels\r\n   * - `%` or `%r`, percentage relative to the length of the reference element\r\n   * - `%p`, percentage relative to the length of the popper element\r\n   * - `vw`, CSS viewport width unit\r\n   * - `vh`, CSS viewport height unit\r\n   *\r\n   * For length is intended the main axis relative to the placement of the popper.<br />\r\n   * This means that if the placement is `top` or `bottom`, the length will be the\r\n   * `width`. In case of `left` or `right`, it will be the height.\r\n   *\r\n   * You can provide a single value (as `Number` or `String`), or a pair of values\r\n   * as `String` divided by a comma or one (or more) white spaces.<br />\r\n   * The latter is a deprecated method because it leads to confusion and will be\r\n   * removed in v2.<br />\r\n   * Additionally, it accepts additions and subtractions between different units.\r\n   * Note that multiplications and divisions aren't supported.\r\n   *\r\n   * Valid examples are:\r\n   * ```\r\n   * 10\r\n   * '10%'\r\n   * '10, 10'\r\n   * '10%, 10'\r\n   * '10 + 10%'\r\n   * '10 - 5vh + 3%'\r\n   * '-10px + 5vh, 5px - 6%'\r\n   * ```\r\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\r\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\r\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\r\n   *\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  offset: {\r\n    /** @prop {number} order=200 - Index used to define the order of execution */\r\n    order: 200,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: offset,\r\n    /** @prop {Number|String} offset=0\r\n     * The offset value as described in the modifier description\r\n     */\r\n    offset: 0\r\n  },\r\n\r\n  /**\r\n   * Modifier used to prevent the popper from being positioned outside the boundary.\r\n   *\r\n   * An scenario exists where the reference itself is not within the boundaries.<br />\r\n   * We can say it has \"escaped the boundaries\" â€” or just \"escaped\".<br />\r\n   * In this case we need to decide whether the popper should either:\r\n   *\r\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\r\n   * - if it should ignore the boundary and \"escape with its reference\"\r\n   *\r\n   * When `escapeWithReference` is set to`true` and reference is completely\r\n   * outside its boundaries, the popper will overflow (or completely leave)\r\n   * the boundaries in order to remain attached to the edge of the reference.\r\n   *\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  preventOverflow: {\r\n    /** @prop {number} order=300 - Index used to define the order of execution */\r\n    order: 300,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: preventOverflow,\r\n    /**\r\n     * @prop {Array} [priority=['left','right','top','bottom']]\r\n     * Popper will try to prevent overflow following these priorities by default,\r\n     * then, it could overflow on the left and on top of the `boundariesElement`\r\n     */\r\n    priority: ['left', 'right', 'top', 'bottom'],\r\n    /**\r\n     * @prop {number} padding=5\r\n     * Amount of pixel used to define a minimum distance between the boundaries\r\n     * and the popper this makes sure the popper has always a little padding\r\n     * between the edges of its container\r\n     */\r\n    padding: 5,\r\n    /**\r\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\r\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\r\n     * `viewport` or any DOM element.\r\n     */\r\n    boundariesElement: 'scrollParent'\r\n  },\r\n\r\n  /**\r\n   * Modifier used to make sure the reference and its popper stay near eachothers\r\n   * without leaving any gap between the two. Expecially useful when the arrow is\r\n   * enabled and you want to assure it to point to its reference element.\r\n   * It cares only about the first axis, you can still have poppers with margin\r\n   * between the popper and its reference element.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  keepTogether: {\r\n    /** @prop {number} order=400 - Index used to define the order of execution */\r\n    order: 400,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: keepTogether\r\n  },\r\n\r\n  /**\r\n   * This modifier is used to move the `arrowElement` of the popper to make\r\n   * sure it is positioned between the reference element and its popper element.\r\n   * It will read the outer size of the `arrowElement` node to detect how many\r\n   * pixels of conjuction are needed.\r\n   *\r\n   * It has no effect if no `arrowElement` is provided.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  arrow: {\r\n    /** @prop {number} order=500 - Index used to define the order of execution */\r\n    order: 500,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: arrow,\r\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\r\n    element: '[x-arrow]'\r\n  },\r\n\r\n  /**\r\n   * Modifier used to flip the popper's placement when it starts to overlap its\r\n   * reference element.\r\n   *\r\n   * Requires the `preventOverflow` modifier before it in order to work.\r\n   *\r\n   * **NOTE:** this modifier will interrupt the current update cycle and will\r\n   * restart it if it detects the need to flip the placement.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  flip: {\r\n    /** @prop {number} order=600 - Index used to define the order of execution */\r\n    order: 600,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: flip,\r\n    /**\r\n     * @prop {String|Array} behavior='flip'\r\n     * The behavior used to change the popper's placement. It can be one of\r\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\r\n     * placements (with optional variations).\r\n     */\r\n    behavior: 'flip',\r\n    /**\r\n     * @prop {number} padding=5\r\n     * The popper will flip if it hits the edges of the `boundariesElement`\r\n     */\r\n    padding: 5,\r\n    /**\r\n     * @prop {String|HTMLElement} boundariesElement='viewport'\r\n     * The element which will define the boundaries of the popper position,\r\n     * the popper will never be placed outside of the defined boundaries\r\n     * (except if keepTogether is enabled)\r\n     */\r\n    boundariesElement: 'viewport'\r\n  },\r\n\r\n  /**\r\n   * Modifier used to make the popper flow toward the inner of the reference element.\r\n   * By default, when this modifier is disabled, the popper will be placed outside\r\n   * the reference element.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  inner: {\r\n    /** @prop {number} order=700 - Index used to define the order of execution */\r\n    order: 700,\r\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\r\n    enabled: false,\r\n    /** @prop {ModifierFn} */\r\n    fn: inner\r\n  },\r\n\r\n  /**\r\n   * Modifier used to hide the popper when its reference element is outside of the\r\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\r\n   * be used to hide with a CSS selector the popper when its reference is\r\n   * out of boundaries.\r\n   *\r\n   * Requires the `preventOverflow` modifier before it in order to work.\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  hide: {\r\n    /** @prop {number} order=800 - Index used to define the order of execution */\r\n    order: 800,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: hide\r\n  },\r\n\r\n  /**\r\n   * Computes the style that will be applied to the popper element to gets\r\n   * properly positioned.\r\n   *\r\n   * Note that this modifier will not touch the DOM, it just prepares the styles\r\n   * so that `applyStyle` modifier can apply it. This separation is useful\r\n   * in case you need to replace `applyStyle` with a custom implementation.\r\n   *\r\n   * This modifier has `850` as `order` value to maintain backward compatibility\r\n   * with previous versions of Popper.js. Expect the modifiers ordering method\r\n   * to change in future major versions of the library.\r\n   *\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  computeStyle: {\r\n    /** @prop {number} order=850 - Index used to define the order of execution */\r\n    order: 850,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: computeStyle,\r\n    /**\r\n     * @prop {Boolean} gpuAcceleration=true\r\n     * If true, it uses the CSS 3d transformation to position the popper.\r\n     * Otherwise, it will use the `top` and `left` properties.\r\n     */\r\n    gpuAcceleration: true,\r\n    /**\r\n     * @prop {string} [x='bottom']\r\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\r\n     * Change this if your popper should grow in a direction different from `bottom`\r\n     */\r\n    x: 'bottom',\r\n    /**\r\n     * @prop {string} [x='left']\r\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\r\n     * Change this if your popper should grow in a direction different from `right`\r\n     */\r\n    y: 'right'\r\n  },\r\n\r\n  /**\r\n   * Applies the computed styles to the popper element.\r\n   *\r\n   * All the DOM manipulations are limited to this modifier. This is useful in case\r\n   * you want to integrate Popper.js inside a framework or view library and you\r\n   * want to delegate all the DOM manipulations to it.\r\n   *\r\n   * Note that if you disable this modifier, you must make sure the popper element\r\n   * has its position set to `absolute` before Popper.js can do its work!\r\n   *\r\n   * Just disable this modifier and define you own to achieve the desired effect.\r\n   *\r\n   * @memberof modifiers\r\n   * @inner\r\n   */\r\n  applyStyle: {\r\n    /** @prop {number} order=900 - Index used to define the order of execution */\r\n    order: 900,\r\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\r\n    enabled: true,\r\n    /** @prop {ModifierFn} */\r\n    fn: applyStyle,\r\n    /** @prop {Function} */\r\n    onLoad: applyStyleOnLoad,\r\n    /**\r\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\r\n     * @prop {Boolean} gpuAcceleration=true\r\n     * If true, it uses the CSS 3d transformation to position the popper.\r\n     * Otherwise, it will use the `top` and `left` properties.\r\n     */\r\n    gpuAcceleration: undefined\r\n  }\r\n};\r\n\r\n/**\r\n * The `dataObject` is an object containing all the informations used by Popper.js\r\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\r\n * @name dataObject\r\n * @property {Object} data.instance The Popper.js instance\r\n * @property {String} data.placement Placement applied to popper\r\n * @property {String} data.originalPlacement Placement originally defined on init\r\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\r\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\r\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\r\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\r\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\r\n * @property {Object} data.boundaries Offsets of the popper boundaries\r\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\r\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\r\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\r\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\r\n */\r\n\r\n/**\r\n * Default options provided to Popper.js constructor.<br />\r\n * These can be overriden using the `options` argument of Popper.js.<br />\r\n * To override an option, simply pass as 3rd argument an object with the same\r\n * structure of this object, example:\r\n * ```\r\n * new Popper(ref, pop, {\r\n *   modifiers: {\r\n *     preventOverflow: { enabled: false }\r\n *   }\r\n * })\r\n * ```\r\n * @type {Object}\r\n * @static\r\n * @memberof Popper\r\n */\r\nvar Defaults = {\r\n  /**\r\n   * Popper's placement\r\n   * @prop {Popper.placements} placement='bottom'\r\n   */\r\n  placement: 'bottom',\r\n\r\n  /**\r\n   * Whether events (resize, scroll) are initially enabled\r\n   * @prop {Boolean} eventsEnabled=true\r\n   */\r\n  eventsEnabled: true,\r\n\r\n  /**\r\n   * Set to true if you want to automatically remove the popper when\r\n   * you call the `destroy` method.\r\n   * @prop {Boolean} removeOnDestroy=false\r\n   */\r\n  removeOnDestroy: false,\r\n\r\n  /**\r\n   * Callback called when the popper is created.<br />\r\n   * By default, is set to no-op.<br />\r\n   * Access Popper.js instance with `data.instance`.\r\n   * @prop {onCreate}\r\n   */\r\n  onCreate: function onCreate() {},\r\n\r\n  /**\r\n   * Callback called when the popper is updated, this callback is not called\r\n   * on the initialization/creation of the popper, but only on subsequent\r\n   * updates.<br />\r\n   * By default, is set to no-op.<br />\r\n   * Access Popper.js instance with `data.instance`.\r\n   * @prop {onUpdate}\r\n   */\r\n  onUpdate: function onUpdate() {},\r\n\r\n  /**\r\n   * List of modifiers used to modify the offsets before they are applied to the popper.\r\n   * They provide most of the functionalities of Popper.js\r\n   * @prop {modifiers}\r\n   */\r\n  modifiers: modifiers\r\n};\r\n\r\n/**\r\n * @callback onCreate\r\n * @param {dataObject} data\r\n */\r\n\r\n/**\r\n * @callback onUpdate\r\n * @param {dataObject} data\r\n */\r\n\r\n// Utils\r\n// Methods\r\nvar Popper = function () {\r\n  /**\r\n   * Create a new Popper.js instance\r\n   * @class Popper\r\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\r\n   * @param {HTMLElement} popper - The HTML element used as popper.\r\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\r\n   * @return {Object} instance - The generated Popper.js instance\r\n   */\r\n  function Popper(reference, popper) {\r\n    var _this = this;\r\n\r\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n    classCallCheck(this, Popper);\r\n\r\n    this.scheduleUpdate = function () {\r\n      return requestAnimationFrame(_this.update);\r\n    };\r\n\r\n    // make update() debounced, so that it only runs at most once-per-tick\r\n    this.update = debounce(this.update.bind(this));\r\n\r\n    // with {} we create a new object with the options inside it\r\n    this.options = _extends({}, Popper.Defaults, options);\r\n\r\n    // init state\r\n    this.state = {\r\n      isDestroyed: false,\r\n      isCreated: false,\r\n      scrollParents: []\r\n    };\r\n\r\n    // get reference and popper elements (allow jQuery wrappers)\r\n    this.reference = reference && reference.jquery ? reference[0] : reference;\r\n    this.popper = popper && popper.jquery ? popper[0] : popper;\r\n\r\n    // Deep merge modifiers options\r\n    this.options.modifiers = {};\r\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\r\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\r\n    });\r\n\r\n    // Refactoring modifiers' list (Object => Array)\r\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\r\n      return _extends({\r\n        name: name\r\n      }, _this.options.modifiers[name]);\r\n    })\r\n    // sort the modifiers by order\r\n    .sort(function (a, b) {\r\n      return a.order - b.order;\r\n    });\r\n\r\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\r\n    // such code is executed in the same order of its modifier\r\n    // they could add new properties to their options configuration\r\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\r\n    this.modifiers.forEach(function (modifierOptions) {\r\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\r\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\r\n      }\r\n    });\r\n\r\n    // fire the first update to position the popper in the right place\r\n    this.update();\r\n\r\n    var eventsEnabled = this.options.eventsEnabled;\r\n    if (eventsEnabled) {\r\n      // setup event listeners, they will take care of update the position in specific situations\r\n      this.enableEventListeners();\r\n    }\r\n\r\n    this.state.eventsEnabled = eventsEnabled;\r\n  }\r\n\r\n  // We can't use class properties because they don't get listed in the\r\n  // class prototype and break stuff like Sinon stubs\r\n\r\n\r\n  createClass(Popper, [{\r\n    key: 'update',\r\n    value: function update$$1() {\r\n      return update.call(this);\r\n    }\r\n  }, {\r\n    key: 'destroy',\r\n    value: function destroy$$1() {\r\n      return destroy.call(this);\r\n    }\r\n  }, {\r\n    key: 'enableEventListeners',\r\n    value: function enableEventListeners$$1() {\r\n      return enableEventListeners.call(this);\r\n    }\r\n  }, {\r\n    key: 'disableEventListeners',\r\n    value: function disableEventListeners$$1() {\r\n      return disableEventListeners.call(this);\r\n    }\r\n\r\n    /**\r\n     * Schedule an update, it will run on the next UI update available\r\n     * @method scheduleUpdate\r\n     * @memberof Popper\r\n     */\r\n\r\n\r\n    /**\r\n     * Collection of utilities useful when writing custom modifiers.\r\n     * Starting from version 1.7, this method is available only if you\r\n     * include `popper-utils.js` before `popper.js`.\r\n     *\r\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\r\n     * and will be removed in v2! Use the PopperUtils module directly instead.\r\n     * Due to the high instability of the methods contained in Utils, we can't\r\n     * guarantee them to follow semver. Use them at your own risk!\r\n     * @static\r\n     * @private\r\n     * @type {Object}\r\n     * @deprecated since version 1.8\r\n     * @member Utils\r\n     * @memberof Popper\r\n     */\r\n\r\n  }]);\r\n  return Popper;\r\n}();\r\n\r\n/**\r\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\r\n * and lets you use it as replacement of a real DOM node.<br />\r\n * You can use this method to position a popper relatively to a set of coordinates\r\n * in case you don't have a DOM node to use as reference.\r\n *\r\n * ```\r\n * new Popper(referenceObject, popperNode);\r\n * ```\r\n *\r\n * NB: This feature isn't supported in Internet Explorer 10\r\n * @name referenceObject\r\n * @property {Function} data.getBoundingClientRect\r\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\r\n * @property {number} data.clientWidth\r\n * An ES6 getter that will return the width of the virtual reference element.\r\n * @property {number} data.clientHeight\r\n * An ES6 getter that will return the height of the virtual reference element.\r\n */\r\n\r\n\r\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\r\nPopper.placements = placements;\r\nPopper.Defaults = Defaults;\r\n\r\nreturn Popper;\r\n\r\n})));\r\n//# sourceMappingURL=popper.js.map"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,IAAID,SAAS,GAAG;IACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACEsJ,KAAK,EAAE;MACL;MACAlT,KAAK,EAAE,GAAG;MACV;MACAoK,OAAO,EAAE,IAAI;MACb;MACA/M,EAAE,EAAE6V;IACN,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEjN,MAAM,EAAE;MACN;MACAjG,KAAK,EAAE,GAAG;MACV;MACAoK,OAAO,EAAE,IAAI;MACb;MACA/M,EAAE,EAAE4I,MAAM;MACV;AACJ;AACA;MACIA,MAAM,EAAE;IACV,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE4M,eAAe,EAAE;MACf;MACA7S,KAAK,EAAE,GAAG;MACV;MACAoK,OAAO,EAAE,IAAI;MACb;MACA/M,EAAE,EAAEwV,eAAe;MACnB;AACJ;AACA;AACA;AACA;MACIC,QAAQ,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC;MAC5C;AACJ;AACA;AACA;AACA;AACA;MACIxM,OAAO,EAAE,CAAC;MACV;AACJ;AACA;AACA;AACA;MACIC,iBAAiB,EAAE;IACrB,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEoL,YAAY,EAAE;MACZ;MACA3R,KAAK,EAAE,GAAG;MACV;MACAoK,OAAO,EAAE,IAAI;MACb;MACA/M,EAAE,EAAEsU;IACN,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEjD,KAAK,EAAE;MACL;MACA1O,KAAK,EAAE,GAAG;MACV;MACAoK,OAAO,EAAE,IAAI;MACb;MACA/M,EAAE,EAAEqR,KAAK;MACT;MACArQ,OAAO,EAAE;IACX,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEsM,IAAI,EAAE;MACJ;MACA3K,KAAK,EAAE,GAAG;MACV;MACAoK,OAAO,EAAE,IAAI;MACb;MACA/M,EAAE,EAAEsN,IAAI;MACR;AACJ;AACA;AACA;AACA;AACA;MACIqG,QAAQ,EAAE,MAAM;MAChB;AACJ;AACA;AACA;MACI1K,OAAO,EAAE,CAAC;MACV;AACJ;AACA;AACA;AACA;AACA;MACIC,iBAAiB,EAAE;IACrB,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;IACEgN,KAAK,EAAE;MACL;MACAvT,KAAK,EAAE,GAAG;MACV;MACAoK,OAAO,EAAE,KAAK;MACd;MACA/M,EAAE,EAAEkW;IACN,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEF,IAAI,EAAE;MACJ;MACArT,KAAK,EAAE,GAAG;MACV;MACAoK,OAAO,EAAE,IAAI;MACb;MACA/M,EAAE,EAAEgW;IACN,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEpF,YAAY,EAAE;MACZ;MACAjO,KAAK,EAAE,GAAG;MACV;MACAoK,OAAO,EAAE,IAAI;MACb;MACA/M,EAAE,EAAE4Q,YAAY;MAChB;AACJ;AACA;AACA;AACA;MACIE,eAAe,EAAE,IAAI;MACrB;AACJ;AACA;AACA;AACA;MACIjG,CAAC,EAAE,QAAQ;MACX;AACJ;AACA;AACA;AACA;MACIE,CAAC,EAAE;IACL,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEyF,UAAU,EAAE;MACV;MACA7N,KAAK,EAAE,GAAG;MACV;MACAoK,OAAO,EAAE,IAAI;MACb;MACA/M,EAAE,EAAEwQ,UAAU;MACd;MACA4F,MAAM,EAAE1F,gBAAgB;MACxB;AACJ;AACA;AACA;AACA;AA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}